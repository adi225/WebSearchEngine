this article is about the programming language for other uses see perl disambiguation perl paradigm s multi paradigm functional imperative object oriented class based reflective procedural generic appeared in 1987 designed by larry wall developer larry wall stable release 5 16 2 1 november 160 1 160 2012 3 months ago 160 2012 11 01 preview release 5 17 5 2 october 160 20 160 2012 3 months ago 160 2012 10 20 typing discipline dynamic influenced by awk smalltalk 80 lisp c c sed unix shell pascal influenced python php ruby ecmascript lpc windows powershell javascript falcon perl 6 qore implementation language c os cross platform license gnu general public license or artistic license 3 usual filename extensions pl pm t pod website www perl org perl programming at wikibooks perl is a high level general purpose interpreted dynamic programming language though perl is not officially an acronym 4 there are various backronyms in use such as practical extraction and reporting language 5 perl was originally developed by larry wall in 1987 as a general purpose unix scripting language to make report processing easier 6 since then it has undergone many changes and revisions the latest major stable revision is 5 16 released in may 2012 perl 6 is a complete redesign of the language announced in 2000 and still under active development as of 2012 update perl borrows features from other programming languages including c shell scripting sh awk and sed 7 the language provides powerful text processing facilities without the arbitrary data length limits of many contemporary unix tools 8 facilitating easy manipulation of text files perl gained widespread popularity in the late 1990s as a cgi scripting language in part due to its parsing abilities 9 in addition to cgi perl is used for graphics programming system administration network programming finance bioinformatics and other applications perl is nicknamed the swiss army chainsaw of scripting languages because of its flexibility and power 10 and possibly also because of its perceived ugliness 11 in 1998 it was also referred to as the duct tape that holds the internet together in reference to its ubiquity and perceived inelegance 12 contents 1 history 1 1 early versions 1 2 early perl 5 1 3 2000 present 1 4 name 1 5 camel symbol 1 5 1 onion symbol 2 overview 2 1 features 2 2 design 2 3 applications 2 4 implementation 2 5 availability 2 5 1 windows 3 database interfaces 4 comparative performance 4 1 optimizing 5 perl 6 6 future of perl 5 7 perl community 7 1 state of the onion 7 2 perl pastimes 7 3 perl on irc 7 4 cpan acme 8 example code 9 see also 10 references 11 further reading 12 external links edit history edit early versions wall began work on perl in 1987 while working as a programmer at unisys 8 and released version 1 0 to the comp sources misc newsgroup on december 18 1987 13 the language expanded rapidly over the next few years perl 2 released in 1988 featured a better regular expression engine perl 3 released in 1989 added support for binary data streams originally the only documentation for perl was a single increasingly lengthy man page in 1991 programming perl known to many perl programmers as the camel book because of its cover was published and became the de facto reference for the language at the same time the perl version number was bumped to 4 not to mark a major change in the language but to identify the version that was well documented by the book edit early perl 5 perl 4 went through a series of maintenance releases culminating in perl 4 036 in 1993 at that point wall abandoned perl 4 to begin work on perl 5 initial design of perl 5 continued into 1994 the perl5 porters mailing list was established in may 1994 to coordinate work on porting perl 5 to different platforms it remains the primary forum for development maintenance and porting of perl 5 14 perl 5 000 was released on october 17 1994 15 it was a nearly complete rewrite of the interpreter and it added many new features to the language including objects references lexical my variables and modules importantly modules provided a mechanism for extending the language without modifying the interpreter this allowed the core interpreter to stabilize even as it enabled ordinary perl programmers to add new language features perl 5 has been in active development since then perl 5 001 was released on march 13 1995 perl 5 002 was released on february 29 1996 with the new prototypes feature this allowed module authors to make subroutines that behaved like perl builtins perl 5 003 was released june 25 1996 as a security release one of the most important events in perl 5 history took place outside of the language proper and was a consequence of its module support on october 26 1995 the comprehensive perl archive network cpan was established as a repository for perl modules and perl itself as of april 2012 it carries over 24 500 modules by more than 9 500 authors 16 perl 5 004 was released on may 15 1997 and included among other things the universal package giving perl a base object to which all classes were automatically derived and the ability to require versions of modules another significant development was the inclusion of the cgi pm module 17 which contributed to perl s popularity as a cgi scripting language 18 perl also now supported running under microsoft windows and several other operating systems 17 perl 5 005 was released on july 22 1998 this release included several enhancements to the regex engine new hooks into the backend through the b modules the qr regex quote operator a large selection of other new core modules and added support for several more operating systems including beos 19 edit 2000 present perl 5 6 was released on march 22 2000 major changes included 64 bit support unicode string representation large file support i e files over 2 gib and the our keyword 20 21 when developing perl 5 6 the decision was made to switch the versioning scheme to one more similar to other open source projects after 5 005 63 the next version became 5 5 640 with plans for development versions to have odd numbers and stable versions to have even numbers in 2000 wall put forth a call for suggestions for a new version of perl from the community the process resulted in 361 rfc request for comments documents which were to be used in guiding development of perl 6 in 2001 22 work began on the apocalypses for perl 6 a series of documents meant to summarize the change requests and present the design of the next generation of perl they were presented as a digest of the rfcs rather than a formal document at this point perl 6 existed only as a description of a language perl 5 8 was first released on july 18 2002 and had nearly yearly updates since then the latest version of perl 5 8 is 5 8 9 released december 14 2008 perl 5 8 improved unicode support added a new io implementation added a new thread implementation improved numeric accuracy and added several new modules 23 in 2004 work began on the synopses originally documents that summarized the apocalypses but which became the specification for the perl 6 language in february 2005 audrey tang began work on pugs a perl 6 interpreter written in haskell 24 this was the first concerted effort towards making perl 6 a reality this effort stalled in 2006 25 on december 18 2007 the 20th anniversary of perl 1 0 perl 5 10 0 was released perl 5 10 0 included notable new features which brought it closer to perl 6 these included a switch statement called given when regular expressions updates and the smart match operator 26 27 around this same time development began in earnest on another implementation of perl 6 known as rakudo perl developed in tandem with the parrot virtual machine as of november 2009 rakudo perl has had regular monthly releases and now is the most complete implementation of perl 6 a major change in the development process of perl 5 occurred with perl 5 11 the development community has switched to a monthly release cycle of development releases with a yearly schedule of stable releases by that plan bugfix point releases will follow the stable releases every three months on april 12 2010 perl 5 12 0 was released notable core enhancements include new package name version syntax the yada yada operator intended to mark placeholder code that is not yet implemented implicit strictures full y2038 compliance regex conversion overloading dtrace support and unicode 5 2 28 on january 21 2011 perl 5 12 3 was released it contains updated modules and some documentation changes 29 version 5 12 4 was released on june 20 2011 the latest version of that branch 5 12 5 was released on november 10 2012 on may 14 2011 perl 5 14 was released the latest version of that branch 5 14 3 was released on october 12 2012 on may 20 2012 perl 5 16 was released notable new features include the ability to specify a given version of perl that one wishes to emulate allowing users to upgrade their version of perl but still run old scripts that would normally be incompatible 30 perl 5 16 also updates the core to support unicode 6 1 30 some observers credit the release of perl 5 10 with the start of the modern perl movement 31 in particular this phrase describes a style of development which embraces the use of the cpan takes advantage of recent developments in the language and is rigorous about creating high quality code 32 while the book modern perl 33 may be the most visible standards bearer of this idea other groups such as the enlightened perl organization 34 have taken up the cause edit name perl was originally named pearl wall wanted to give the language a short name with positive connotations he claims that he considered and rejected every three and four letter word in the dictionary he also considered naming it after his wife gloria wall discovered the existing pearl programming language before perl s official release and changed the spelling of the name 35 when referring to the language the name is normally capitalized perl as a proper noun when referring to the interpreter program itself the name is often uncapitalized perl because most unix like file systems are case sensitive before the release of the first edition of programming perl it was common to refer to the language as perl randal l schwartz however capitalized the language s name in the book to make it stand out better when typeset this case distinction was subsequently documented as canonical 36 there is some contention about the all caps spelling perl which the documentation declares incorrect 36 and which some core community members consider a sign of outsiders 37 the name is occasionally backronymed as practical extraction and report language which appears at the top of the documentation 35 and in some printed literature 38 several backronyms have been suggested as equally canonical including wall s own humorous pathologically eclectic rubbish lister 39 indeed wall claims that the name was intended to inspire many different expansions 40 edit camel symbol programming perl published by o reilly media features a picture of a dromedary camel on the cover and is commonly called the camel book 41 this image of a camel has become an unofficial symbol of perl as well as a general hacker emblem appearing on t shirts and other clothing items o reilly owns the image as a trademark but licenses it for non commercial use requiring only an acknowledgement and a link to www perl com licensing for commercial use is decided on a case by case basis 42 o reilly also provides programming republic of perl logos for non commercial sites and powered by perl buttons for any site that uses perl 42 edit onion symbol the perl foundation owns an alternative symbol an onion which it licenses to its subsidiaries perl mongers perlmonks perl org and others 43 the symbol is a visual pun on pearl onion 44 edit overview main article perl language structure according to wall perl has two slogans the first is there s more than one way to do it commonly known as tmtowtdi the second slogan is easy things should be easy and hard things should be possible 8 edit features the overall structure of perl derives broadly from c perl is procedural in nature with variables expressions assignment statements brace delimited blocks control structures and subroutines perl also takes features from shell programming all variables are marked with leading sigils which unambiguously identify the data type for example scalar array hash of the variable in context importantly sigils allow variables to be interpolated directly into strings perl has many built in functions that provide tools often used in shell programming although many of these tools are implemented by programs external to the shell such as sorting and calling on system facilities perl takes lists from lisp hashes associative arrays from awk and regular expressions from sed these simplify and facilitate many parsing text handling and data management tasks also shared with lisp are the implicit return of the last value in a block and the fact that all statements have a value and thus are also expressions and can be used in larger expressions themselves perl 5 added features that support complex data structures first class functions that is closures as values and an object oriented programming model these include references packages class based method dispatch and lexically scoped variables along with compiler directives for example the strict pragma a major additional feature introduced with perl 5 was the ability to package code as reusable modules wall later stated that the whole intent of perl 5 s module system was to encourage the growth of perl culture rather than the perl core 45 all versions of perl do automatic data typing and automatic memory management the interpreter knows the type and storage requirements of every data object in the program it allocates and frees storage for them as necessary using reference counting so it cannot deallocate circular data structures without manual intervention legal type conversions for example conversions from number to string are done automatically at run time illegal type conversions are fatal errors edit design the design of perl can be understood as a response to three broad trends in the computer industry falling hardware costs rising labor costs and improvements in compiler technology many earlier computer languages such as fortran and c aimed to make efficient use of expensive computer hardware in contrast perl is designed to make efficient use of expensive computer programmers perl has many features that ease the task of the programmer at the expense of greater cpu and memory requirements these include automatic memory management dynamic typing strings lists and hashes regular expressions introspection and an eval function perl follows the theory of no built in limits 41 an idea similar to the zero one infinity rule wall was trained as a linguist and the design of perl is very much informed by linguistic principles examples include huffman coding common constructions should be short good end weighting the important information should come first and a large collection of language primitives perl favors language constructs that are concise and natural for humans to write even where they complicate the perl interpreter perl syntax reflects the idea that things that are different should look different 46 for example scalars arrays and hashes have different leading sigils array indices and hash keys use different kinds of braces strings and regular expressions have different standard delimiters this approach can be contrasted with languages such as lisp where the same s expression construct and basic syntax are used for many different purposes perl does not enforce any particular programming paradigm procedural object oriented functional or others or even require the programmer to choose among them there is a broad practical bent to both the perl language and the community and culture that surround it the preface to programming perl begins perl is a language for getting your job done 8 one consequence of this is that perl is not a tidy language it includes many features tolerates exceptions to its rules and employs heuristics to resolve syntactical ambiguities because of the forgiving nature of the compiler bugs can sometimes be hard to find perl s function documentation remarks on the variant behavior of built in functions in list and scalar contexts that in general they do what you want unless you want consistency 47 no written specification or standard for the perl language exists for perl versions through perl 5 and there are no plans to create one for the current version of perl there has been only one implementation of the interpreter and the language has evolved along with it that interpreter together with its functional tests stands as a de facto specification of the language perl 6 however started with a specification 48 and several projects 49 aim to implement some or all of the specification edit applications perl has many and varied applications compounded by the availability of many standard and third party modules perl has chiefly been used to write cgi scripts large projects written in perl include cpanel slash bugzilla rt twiki and movable type high traffic websites that use perl extensively include amazon com bbc co uk priceline com craigslist 50 imdb 51 livejournal slashdot and ticketmaster it is also an integral component of the popular lamp solution stack for web development perl is often used as a glue language tying together systems and interfaces that were not specifically designed to interoperate and for data munging 52 that is converting or processing large amounts of data for tasks such as creating reports in fact these strengths are intimately linked the combination makes perl a popular all purpose language for system administrators particularly because short programs can be entered and run on a single command line perl code can be made portable across windows and unix such code is often used by suppliers of software both cots and bespoke to simplify packaging and maintenance of software build and deployment scripts graphical user interfaces guis may be developed using perl for example perl tk is commonly used to enable user interaction with perl scripts such interaction may be synchronous or asynchronous using callbacks to update the gui for more information about the technologies involved see tk tcl and wxperl edit implementation perl is implemented as a core interpreter written in c together with a large collection of modules written in perl and c as of 2010 update the stable version 5 12 3 is 14 2 160 mb when packaged in a tar file and gzip compressed 53 the interpreter is 150 000 lines of c code and compiles to a 1 160 mb executable on typical machine architectures alternatively the interpreter can be compiled to a link library and embedded in other programs there are nearly 500 modules in the distribution comprising 200 000 lines of perl and an additional 350 000 lines of c code much of the c code in the modules consists of character encoding tables the interpreter has an object oriented architecture all of the elements of the perl language scalars arrays hashes coderefs filehandles are represented in the interpreter by c structs operations on these structs are defined by a large collection of macros typedefs and functions these constitute the perl c api the perl api can be bewildering to the uninitiated but its entry points follow a consistent naming scheme which provides guidance to those who use it the life of a perl interpreter divides broadly into a compile phase and a run phase 54 in perl the phases are the major stages in the interpreter s life cycle each interpreter goes through each phase only once and the phases follow in a fixed sequence most of what happens in perl s compile phase is compilation and most of what happens in perl s run phase is execution but there are significant exceptions perl makes important use of its capability to execute perl code during the compile phase perl will also delay compilation into the run phase the terms that indicate the kind of processing that is actually occurring at any moment are compile time and run time perl is in compile time at most points during the compile phase but compile time may also be entered during the run phase the compile time for code in a string argument passed to the eval built in occurs during the run phase perl is often in run time during the compile phase and spends most of the run phase in run time code in begin blocks executes at run time but in the compile phase at compile time the interpreter parses perl code into a syntax tree at run time it executes the program by walking the tree text is parsed only once and the syntax tree is subject to optimization before it is executed so that execution is relatively efficient compile time optimizations on the syntax tree include constant folding and context propagation but peephole optimization is also performed perl has a turing complete grammar because parsing can be affected by run time code executed during the compile phase 55 therefore perl cannot be parsed by a straight lex yacc lexer parser combination instead the interpreter implements its own lexer which coordinates with a modified gnu bison parser to resolve ambiguities in the language it is often said that only perl can parse perl 56 meaning that only the perl interpreter perl can parse the perl language perl but even this is not in general true because the perl interpreter can simulate a turing machine during its compile phase it would need to decide the halting problem in order to complete parsing in every case it s a long standing result that the halting problem is undecidable and therefore not even perl can always parse perl perl makes the unusual choice of giving the user access to its full programming power in its own compile phase the cost in terms of theoretical purity is high but practical inconvenience seems to be rare other programs that undertake to parse perl such as source code analyzers and auto indenters have to contend not only with ambiguous syntactic constructs but also with the undecidability of perl parsing in the general case adam kennedy s ppi project focused on parsing perl code as a document retaining its integrity as a document instead of parsing perl as executable code which not even perl itself can always do it was kennedy who first conjectured that parsing perl suffers from the halting problem 57 which was later proved 58 perl is distributed with some 120 000 functional tests these run as part of the normal build process and extensively exercise the interpreter and its core modules perl developers rely on the functional tests to ensure that changes to the interpreter do not introduce bugs additionally perl users who see that the interpreter passes its functional tests on their system can have a high degree of confidence that it is working properly maintenance of the perl interpreter has become increasingly difficult over the years the code base has undergone continuous development since 1994 the code has been optimized for performance at the expense of simplicity clarity and strong internal interfaces new features have been added yet virtually complete backward compatibility with earlier versions is maintained major releases of perl were coordinated by perl pumpkings 59 which handled integrating patch submissions and bug fixes but the language has since changed to a rotating monthly release cycle development discussion takes place via the perl5 porters mailing list as of perl 5 11 development efforts have included refactoring certain core modules known as dual lifed modules out of the perl core 60 to help alleviate some of these problems edit availability perl is dual licensed under both the artistic license and the gnu general public license distributions are available for most operating systems it is particularly prevalent on unix and unix like systems but it has been ported to most modern and many obsolete platforms with only six reported exceptions perl can be compiled from source code on all posix compliant or otherwise unix compatible platforms 61 because of unusual changes required for the mac os classic environment a special port called macperl was shipped independently 62 the comprehensive perl archive network carries a complete list of supported platforms with links to the distributions available on each 63 cpan is also the source for publicly available perl modules that are not part of the core perl distribution edit windows users of microsoft windows typically install one of the native binary distributions of perl for win32 most commonly strawberry perl or activeperl compiling perl from source code under windows is possible but most installations lack the requisite c compiler and build tools this also makes it difficult to install modules from the cpan particularly those that are partially written in c activeperl is a closed source distribution from activestate that has regular releases that track the core perl releases 64 the distribution also includes the perl package manager ppm 65 a popular tool for installing removing upgrading and managing the use of common perl modules strawberry perl is an open source distribution for windows it has had regular quarterly releases since january 2008 including new modules as feedback and requests come in strawberry perl aims to be able to install modules like standard perl distributions on other platforms including compiling xs modules the cygwin emulation layer is another way of running perl under windows cygwin provides a unix like environment on windows and both perl and cpan are available as standard pre compiled packages in the cygwin setup program because cygwin also includes the gcc compiling perl from source is also possible edit database interfaces perl is widely favored for database applications its text handling facilities are useful for generating sql queries arrays hashes and automatic memory management make it easy to collect and process the returned data for example in tim bunce s dbi application programming interface api the arguments to the api can be the text of sql queries thus it is possible to program in multiple languages at the same time e g for generating a web page using html javascript and sql in a here document the use of perl variable interpolation to programmatically customize each of the sql queries and the specification of perl arrays or hashes as the structures to programmatically hold the resulting data sets from each sql query allows a high level mechanism for handling large amounts of data for post processing by a perl subprogram 66 in early versions of perl database interfaces were created by relinking the interpreter with a client side database library this was sufficiently difficult that it was done for only a few of the most important and most widely used databases and it restricted the resulting perl executable to using just one database interface at a time in perl 5 database interfaces are implemented by perl dbi modules the dbi database interface module presents a single database independent interface to perl applications while the dbd database driver modules handle the details of accessing some 50 different databases there are dbd drivers for most ansi sql databases dbi provides caching for database handles and queries which can greatly improve performance in long lived execution environments such as mod perl 67 helping high volume systems avert load spikes as in the slashdot effect in modern perl applications especially those written using web application frameworks such as catalyst the dbi module is often used indirectly via object relational mappers such as dbix class class dbi or rose db object which generate sql queries and handle data transparently to the application author edit comparative performance the computer language benchmarks game a project hosted by alioth compares the performance of implementations of typical programming problems in several programming languages 68 the submitted perl implementations typically perform toward the high end of the memory usage spectrum and give varied speed results perl s performance in the benchmarks game is typical for interpreted languages 69 large perl programs start more slowly than similar programs in compiled languages because perl has to compile the source every time it runs in a talk at the yapc europe 2005 conference and subsequent article a timely start jean louis leroy found that his perl programs took much longer to run than he expected because the perl interpreter spent much of the time finding modules because of his over large include path 70 unlike java python and ruby perl has only experimental support for pre compiling 71 therefore perl programs pay this overhead penalty on every execution the run phase of typical programs is long enough that amortized startup time is not substantial but benchmarks that measure very short execution times are likely to be skewed due to this overhead a number of tools have been introduced to improve this situation the first such tool was apache s mod perl which sought to address one of the most common reasons that small perl programs were invoked rapidly cgi web development activeperl via microsoft isapi provides similar performance improvements once perl code is compiled there is additional overhead during the execution phase that typically isn t present for programs written in compiled languages such as c or c examples of such overhead include bytecode interpretation reference counting memory management and dynamic type checking edit optimizing like any code perl programs can be tuned for performance using benchmarks and profiles after a readable and correct implementation is finished in part because of perl s interpreted nature writing more efficient perl will not always be enough to meet one s performance goals for a program in such situations the most critical routines of a perl program can be written in other languages such as c or assembly which can be connected to perl via simple inline modules or the more complex but flexible xs mechanism 72 nicholas clark a perl core developer discusses some perl design trade offs and solutions in a 2002 document called when perl is not quite fast enough 73 edit perl 6 main article perl 6 camelia the logo for the perl 6 project 74 at the 2000 perl conference jon orwant made a case for a major new language initiative 75 this led to a decision to begin work on a redesign of the language to be called perl 6 proposals for new language features were solicited from the perl community at large which submitted more than 300 rfcs wall spent the next few years digesting the rfcs and synthesizing them into a coherent framework for perl 6 he has presented his design for perl 6 in a series of documents called apocalypses numbered to correspond to chapters in programming perl as of january 2011 update the developing specification of perl 6 is encapsulated in design documents called synopses numbered to correspond to apocalypses 76 perl 6 is not intended to be backward compatible although there will be a compatibility mode perl 6 and perl 5 are distinct languages with a common ancestry 77 thesis work by bradley m kuhn overseen by wall considered the possible use of the java virtual machine as a runtime for perl 78 kuhn s thesis showed this approach to be problematic in 2001 it was decided that perl 6 would run on a cross language virtual machine called parrot this will mean that other languages targeting the parrot will gain native access to cpan allowing some level of cross language development in 2005 audrey tang created the pugs project an implementation of perl 6 in haskell this acted as and continues to act as a test platform for the perl 6 language separate from the development of the actual implementation allowing the language designers to explore the pugs project spawned an active perl haskell cross language community centered around the freenode perl6 irc channel as of 2012 update a number of features in the perl 6 language show similarities to haskell citation needed as of 2012 update perl 6 development centers primarily around two compilers 79 rakudo perl 6 an implementation running on top of the parrot virtual machine niecza which targets the common language runtime edit future of perl 5 development of perl 5 is also continuing perl 5 12 0 was released in april 2010 with some new features influenced by the design of perl 6 28 80 perl 5 14 1 was released on june 17 2011 and perl 5 16 1 was released on august 9 2012 81 perl 5 development versions are released on a monthly basis with major releases coming out once per year 82 future plans for perl 5 include making the core language easier to extend from modules and providing a small extensible meta object protocol in core 83 the relative proportion of searches for perl programming as compared with similar searches for other programming languages steadily declined from 2005 to early 2011 with a leveling off since then 84 however according to this same source perl has been one of the top ten most popular programming languages since records began in 2001 85 edit perl community perl s culture and community has developed alongside the language itself usenet was the first public venue in which perl was introduced but over the course of its evolution perl s community was shaped by the growth of broadening internet based services including the introduction of the world wide web the community that surrounds perl was in fact the topic of wall s first state of the onion talk 86 edit state of the onion state of the onion is the name for wall s yearly keynote style summaries on the progress of perl and its community they are characterized by his hallmark humor employing references to perl s culture the wider hacker culture wall s linguistic background sometimes his family life and occasionally even his christian background 87 each talk is first given at various perl conferences and is eventually also published online edit perl pastimes japhs in email usenet and message board postings just another perl hacker japh programs are a common trend originated by randal l schwartz one of the earliest professional perl trainers 88 in the parlance of perl culture perl programmers are known as perl hackers and from this derives the practice of writing short programs to print out the phrase just another perl hacker in the spirit of the original concept these programs are moderately obfuscated and short enough to fit into the signature of an email or usenet message the canonical japh as developed by schwartz includes the comma at the end although this is often omitted 89 perl golf perl golf is the pastime of reducing the number of characters key strokes used in a perl program to the bare minimum much as how golf players seek to take as few shots as possible in a round the phrase s first use 90 emphasized the difference between pedestrian code meant to teach a newcomer and terse hacks likely to amuse experienced perl programmers an example of the latter being japhs that were already used in signatures in usenet postings and elsewhere similar stunts had been an unnamed pastime in the language apl in previous decades the use of perl to write a program that performed rsa encryption prompted a widespread and practical interest in this pastime 91 in subsequent years the term code golf has been applied to the pastime in other languages 92 a perl golf apocalypse was held at perl conference 4 0 in monterey california in july 2000 obfuscation as with c obfuscated code competitions were a well known pastime in the late 1990s the obfuscated perl contest was a competition held by the perl journal from 1996 to 2000 that made an arch virtue of perl s syntactic flexibility awards were given for categories such as most powerful programs that made efficient use of space and best four line signature for programs that fit into four lines of 76 characters in the style of a usenet signature block 93 poetry perl poetry is the practice of writing poems that can be compiled as legal perl code for example the piece known as black perl this hobby is made possible by the large number of english words that are used in the perl new poems are regularly submitted to the community at perlmonks 94 edit perl on irc there are a number of irc channels that offer support for the language and some modules irc network channels irc freenode net perl perl6 cbstream perlcafe poe irc perl org moose poe catalyst dbix class perl help distzilla epo corehackers sdl win32 toolchain padre irc slashnet org perlmonks irc oftc net perl irc efnet net perlhelp irc rizon net perl irc debian org debian perl edit cpan acme there are also many examples of code written purely for entertainment on the cpan lingua romana perligata for example allows writing programs in latin 95 upon execution of such a program the module translates its source code into regular perl and runs it the perl community has set aside the acme namespace for modules that are fun in nature but its scope has widened to include exploratory or experimental code or any other module that is not meant to ever be used in production some of the acme modules are deliberately implemented in amusing ways this includes acme bleach one of the first modules in the acme namespace 96 which allows the program s source code to be whitened i e all characters replaced with whitespace and yet still work edit example code in older versions of perl one would write the hello world program as print hello world n in later versions which support the say statement one can also write it as use 5 010 say hello world good perl practices require more complex programs to add the use strict and use warnings pragmas leading into something like use strict use warnings print hello world n here is a more complex perl program that counts down the seconds up to a given threshold usr bin perl use strict use warnings my remaining total remaining total shift argv stdout gt autoflush 1 while remaining printf remaining s s r remaining total sleep 1 print n the perl interpreter can also be used for one off scripts on the command line the following example as invoked from an sh compatible shell such as bash translates the string bob in all files ending with txt in the current directory to robert perl i bak lp e s bob robert g txt edit see also free software portal computer programming portal outline of perl perl language structure perl data language perl object environment plain old documentation edit references perl 5 16 2 is now available perl org http www nntp perl org group perl perl5 porters 2012 11 msg194915 html retrieved 2012 11 01 perl 5 17 5 is now available perl org http www nntp perl org group perl perl5 porters 2012 10 msg194349 html retrieved 2012 10 21 perl licensing dev perl org http dev perl org licenses retrieved 2011 01 08 lapworth leo general questions about perl perl faq perl org http learn perl org faq perlfaq1 html whats the difference between perl and perl retrieved 24 february 2012 perl tutorial org introducing to perl perl tutorial http www perltutorial org introducing to perl aspx retrieved 24 february 2012 sheppard doug 2000 10 16 beginner s introduction to perl dev perl org http www perl com pub 2000 10 begperl1 html retrieved 2011 01 08 ashton elaine 1999 the timeline of perl and its culture v3 0 0505 http history perl org perltimeline html a b c d wall larry tom christiansen and jon orwant july 2000 programming perl third edition o reilly media isbn 160 0 596 00027 8 smith roderick w 21 jun 2002 advanced linux networking addison wesley professional p 160 594 isbn 160 978 0 201 77423 8 sheppard doug 2000 10 16 beginner s introduction to perl o reilly media http www perl com pub a 2000 10 begperl1 html retrieved 2008 07 27 raymond eric 2003 12 23 swiss army chainsaw the jargon file http www catb org jargon html s swiss army chainsaw html retrieved 2 12 09 13 leonard andrew the joy of perl salon com http www salon com 1998 10 13 feature 269 retrieved 2012 06 05 larry wall 1988 02 01 v13i001 perl a replacement for awk and sed part01 10 comp sources unix web link retrieved 2011 01 13 perl perl5 porters archive perl org http www nntp perl org group perl perl5 porters retrieved 2011 01 13 perlhist the perl history records perl 5 version 12 2 documentation perldoc perl org http perldoc perl org perlhist html retrieved 2011 01 21 cpan cpan http www cpan org retrieved 2012 04 14 a b perl5004delta what s new for perl5 004 perl 5 version 12 2 documentation perldoc perl org http perldoc perl org perl5004delta html retrieved 2011 01 08 patwardhan nathan siever ellen spainhour stephen 2002 perl in a nutshell second edition o reilly media isbn 160 978 0 596 00241 1 perl5005delta what s new for perl5 005 perl 5 version 12 2 documentation perldoc perl org http perldoc perl org perl5005delta html retrieved 2011 01 21 perl56delta what s new for perl v5 6 0 perl 5 version 12 2 documentation perldoc perl org http perldoc perl org perl56delta html retrieved 2011 01 21 perl56delta what s new for perl v5 6 x perl 5 version 12 2 documentation perldoc perl org http perldoc perl org perl561delta html retrieved 2011 01 21 wall larry apocalypse 1 the ugly the bad and the good http dev perl org perl6 doc design apo a01 html retrieved 2011 01 08 perl58delta what is new for perl v5 8 0 perl 5 version 12 2 documentation perldoc perl org http perldoc perl org perl58delta html retrieved 2011 01 21 a plan for pugs o reilly media 2005 03 03 http www perl com pub a 2005 03 03 pugs interview html retrieved 2011 01 27 tang audrey 2010 04 21 re how to implement perl 6 in ten years perlmonks http www perlmonks org node id 835936 retrieved 2011 01 03 perl5100delta what is new for perl 5 10 0 perl 5 version 12 2 documentation perldoc perl org http perldoc perl org perl5100delta html retrieved 2011 01 08 perlsyn perl syntax perl 5 version 12 2 documentation perldoc perl org http perldoc perl org perlsyn html smart matching in detail retrieved 2011 01 21 a b perl5120delta what is new for perl v5 12 0 perl 5 version 12 2 documentation perldoc perl org http perldoc perl org perl5120delta html retrieved 2011 01 08 perldelta what is new for perl v5 12 3 perl 5 version 12 2 documentation perldoc perl org http perldoc perl org perl5123delta html retrieved 2011 01 08 a b perldelta what is new for perl v5 16 0 perl 5 version 16 0 documentation search cpan org http search cpan org rjbs perl 5 16 0 pod perldelta pod retrieved 2012 05 21 http www modernperlbooks com mt 2009 07 milestones in the perl renaissance html http modernperlbooks com books modern perl http onyxneon com books modern perl http www enlightenedperl org a b richardson marjorie 1999 05 01 larry wall the guru of perl linux journal http www linuxjournal com article 3394 retrieved 2011 01 03 a b perlfaq1 what s the difference between perl and perl perldoc perl org perl 5 version 12 2 documentation http perldoc perl org perlfaq1 html what s the difference between 22perl 22 and 22perl 22 3f schwartz randal perl as shibboleth and the perl community perlmonks http www perlmonks org index pl node id 510594 retrieved 2007 06 01 mcconnell steve 2004 code complete 2 ed microsoft press p 160 65 wall larry perl the perl language interpreter perl 5 version 12 2 documentation http perldoc perl org perl html bugs retrieved 2011 01 26 wall larry re 7 perl as shibboleth and the perl community perlmonks http www perlmonks org index pl node id 511722 retrieved 2011 01 02 a b schwartz randal l phoenix tom foy brian learning perl third edition isbn 160 978 0 596 00132 2 a b the perl camel usage and trademark information o reilly media http onlamp com pub a oreilly perl usage retrieved 2011 01 09 perl trademark the perl foundation http www perlfoundation org perl trademark retrieved 2011 01 09 gillmore dan 1998 10 25 republic of perl chicago tribune http articles chicagotribune com 1998 10 25 news 9810250094 1 programmers open source movement programming community retrieved 2011 01 10 1 may 10 1997 wall larry 1997 03 01 wherefore art thou linux journal http www linuxjournal com article 2070 retrieved 2011 03 13 perlfunc perl builtin functions perl 5 version 12 2 documentation perldoc perl org http perldoc perl org perlfunc html retrieved 2011 01 10 perl 6 specification the perl 6 project http www perl6 org specification retrieved 2011 01 27 perl 6 compilers the perl 6 project http www perl6 org compilers retrieved 2011 01 27 gilmore w j beginning php and mysql from novice to professional fourth edition apress p 160 484 isbn 160 978 1 4302 3114 1 imdb helpdesk what software hardware are you using to run the site internet movie database http www imdb com help search domain helpdesk faq amp index 1 amp file techinfo retrieved 2011 02 12 perl books book data munging with perl perl org http books perl org book 95 retrieved december 30 2010 perl source code cpan http www cpan org src retrieved 2011 01 27 a description of the perl 5 interpreter can be found in programming perl 3rd ed chapter 18 see particularly page 467 which carefully distinguishes run phase and compile phase from run time and compile time perl time and phase are often confused schwartz randal on parsing perl http www perlmonks org index pl node id 44722 retrieved 2007 01 03 the perl journal 19 9 26 o reilly media ftp ftp ora com pub labs tpj tpj2 pdf retrieved 2011 02 04 kennedy adam 2006 ppi parse analyze and manipulate perl without perl cpan http search cpan org adamk ppi 1 215 lib ppi pm rice s theorem the perl review 4 3 23 29 summer 2008 and perl is undecidable the perl review 5 0 7 11 fall 2008 available online at kegler jeffrey perl and undecidability http www jeffreykegler com home perl and undecidability http www perlfoundation org perl5 index cgi pumpking perl5110delta what is new for perl v5 11 0 perl 5 version 12 2 documentation perldoc perl org http perldoc perl org perl5110delta html retrieved 2011 01 08 hietaniemi jarkko 1998 perl ports binary distributions cpan org http www cpan org ports the macperl pages prime time freeware 1997 http www macperl com perl ports binary distributions cpan http www cpan org ports retrieved 2011 01 27 activeperl is perl for windows mac linux aix hp ux amp solaris activestate software http www activestate com activeperl retrieved 2011 01 09 using ppm activestate software http docs activestate com activeperl 5 12 faq activeperl faq2 html retrieved 2011 01 09 descartes alligator bunce tim 2000 programming the perl dbi 160 database programming with perl 1 ed beijing u a o reilly isbn 160 1 56592 699 4 bekman stas efficient work with databases under mod perl http perl apache org docs 1 0 guide performance html efficient work with databases under mod perl retrieved 2007 09 01 alioth the computer language benchmarks game project info alioth http alioth debian org projects benchmarksgame retrieved 2011 01 13 which programs are fastest computer language benchmarks game alioth http benchmarksgame alioth debian org u32 which programs are fastest php v8 on amp lua on amp jruby on amp php on amp python3 on amp yarv on amp perl on retrieved 2011 01 13 leroy jean louis 2005 12 01 a timely start o reilly http www perl com pub a 2005 12 21 a timely start html beattie malcolm and enache adrian 2003 b bytecode perl compiler s bytecode backend cpan http search cpan org nwclark perl 5 8 8 ext b b bytecode pm known bugs ingerson brian inline search cpan org cpan http search cpan org sisyphus inline 0 47 inline pod retrieved 2011 01 26 dead link clark nicholas when perl is not quite fast enough http www ccl4 org nick p fast enough retrieved 2011 01 02 perl 6 the perl 6 project http perl6 org retrieved 2011 02 27 torkington nathan transcription of larry s talk nntp perl org http www nntp perl org group perl perl6 meta 2000 10 msg424 html retrieved 2011 01 25 official perl 6 documentation the perl 6 project http perlcabal org syn retrieved 2011 01 25 perl 6 dev perl org dev perl org http dev perl org perl6 retrieved 2011 01 25 kuhn bradley january 2001 considerations on porting perl to the java virtual machine university of cincinnati http www ebb org bkuhn writings technical thesis retrieved 2008 06 28 feature comparison of perl 6 compilers http perl6 org compilers features perl 5 12 0 released update heise media uk 2010 04 13 http www h online com open news item perl 5 12 0 released update 976919 html retrieved 2011 01 08 perl 5 16 1 released 2012 08 09 http www perlmonks org node id 986397 retrieved 2012 08 26 the unstoppable perl release train lwn net 2012 02 29 http lwn net articles 484297 retrieved 2012 03 28 perl 5 16 and beyond 2012 03 12 http lwn net subscriberlink 487216 8491ce8b050bfd59 tiobe software index 2012 tiobe programming community index perl http www tiobe com index php paperinfo tpci perl html retrieved 2012 04 27 tiobe software index 2012 tiobe programming community index perl http www tiobe com index php paperinfo tpci perl html retrieved 2012 04 30 wall larry 1997 08 20 perl culture aka the first state of the onion http www wall org larry keynote keynote html larry wall 2nd state of the onion http www wall org larry onion onion html retrieved 2012 10 12 search for church randal l schwartz 1999 05 02 who is just another perl hacker comp lang perl misc web link retrieved 2007 11 12 schwartz randal 2005 03 31 canonical japh perlmonks http www perlmonks org bare node id 443856 retrieved 2011 05 16 greg bacon 1999 05 28 re incrementing a value in a slice comp lang perl misc web link retrieved 2011 07 12 back adam rsa in 5 lines of perl http www cypherspace org rsa pureperl html retrieved 2011 01 10 code golf what is code golf 29degrees 2007 http codegolf com gallo felix 2003 the zeroth obfuscated perl contest in jon orwant games diversions and perl culture best of the perl journal o reilly media http oreilly com catalog tpj3 chapter ch43 pdf retrieved 2011 01 12 perl poetry perlmonks http www perlmonks org node id 1590 retrieved 2011 01 27 conway damian lingua romana perligata perl for the xxi imum century http www csse monash edu au damian papers html perligata html brocard leon 2001 05 23 use perl journal of acme use perl http use perl org acme journal 200 edit further reading learning perl 6th edition 2011 o reilly beginner level introduction to perl beginning perl 1st edition 2012 wrox a beginner s tutorial for those new to programming or just new to perl modern perl 2nd edition 2012 onyx neon describes modern perl programming techniques programming perl 4th edition 2012 o reilly the definitive perl reference effective perl programming 2nd edition 2010 addison wesley intermediate to advanced level guide to writing idiomatic perl perl cookbook isbn 0 596 00313 7 practical perl programming examples dominus mark jason 2005 higher order perl morgan kaufmann isbn 160 1 55860 701 3 http hop perl plover com book functional programming techniques in perl edit external links find more about perl at wikipedia s sister projects definitions and translations from wiktionary media from commons learning resources from wikiversity quotations from wikiquote textbooks from wikibooks official website perl org comprehensive perl archive network the canonical location for perl code and modules the perl foundation perlmonks a community committed to sharing perl knowledge and coding tips v t e perl people larry wall randal l schwartz damian conway allison randal audrey tang simon cozens sean m burke chromatic adam kennedy brian d foy mark jason dominus jesse vincent things the perl foundation perl mongers perlmonks archives module perl vm parrot yapc bioperl plack psgi frameworks catalyst mason maypole dancer moose mojolicious outline category v t e free and open source software general copyleft free software free software definition gratis versus libre list of free and open source software packages list of open source android applications list of free software web applications list of project directories comparison of hosting facilities list of formerly proprietary software open source software operating system families aros bsd darwin ecos freedos gnu haiku inferno linux mach minix opensolaris plan 9 reactos development basic for qt eclipse freebasic free pascal gcc gambas java llvm lua netbeans open64 perl php python rose ruby tcl history gnu haiku linux mozilla application suite firefox thunderbird organizations apache software foundation android open source project blender foundation eclipse foundation freebsd foundation freedesktop org free software foundation europe india latin america fsmi gnome foundation gnu project google code kde e v linux foundation mozilla foundation open source geospatial foundation open source initiative software freedom conservancy sourceforge symbian foundation the document foundation xiph org foundation xmpp standards foundation x org foundation licences apache artistic beerware boost bsd gnu gpl gnu lgpl isc mit mpl ms pl rl zlib public domain cc0 wtfpl fsf approved licenses licence standards open source definition the free software definition debian free software guidelines definition of free cultural works challenges binary blob contributor license agreement digital rights management graphics hardware compatibility license proliferation mozilla software rebranding proprietary software sco linux controversies security software patents hardware restrictions trusted computing secure boot viral license other topics alternative terms community linux distribution forking movement microsoft open specification promise revolution os the cathedral and the bazaar comparison with closed source book free and open source software category free software portal free software 