dimensional modeling dm is the name of a set of techniques and concepts used in data warehouse design it is considered to be different from entity relationship modeling er dimensional modeling does not necessarily involve a relational database the same modeling approach at the logical level can be used for any physical form such as multidimensional database or even flat files according to data warehousing consultant ralph kimball 1 dm is a design technique for databases intended to support end user queries in a data warehouse it is oriented around understandability and performance according to him although transaction oriented er is very useful for the transaction capture it should be avoided for end user delivery dimensional modeling always uses the concepts of facts measures and dimensions context facts are typically but not always numeric values that can be aggregated and dimensions are groups of hierarchies and descriptors that define the facts for example sales amount is a fact timestamp product register store etc are elements of dimensions dimensional models are built by business process area e g store sales inventory claims etc because the different business process areas share some but not all dimensions efficiency in design operation and consistency is achieved using conformed dimensions i e using one copy of the shared dimension across subject areas the term conformed dimensions was originated by ralph kimball contents 1 dimensional modeling process 2 3 2 dimension normalization 3 benefits of dimensional modeling 4 literature 5 references edit dimensional modeling process 2 3 the dimensional model is built on a star like schema with dimensions surrounding the fact table to build the schema the following design model is used choose the business process declare the grain identify the dimensions identify the fact choose the business process the process of dimensional modeling builds on a 4 step design method that helps to ensure the usability of the dimensional model and the use of the data warehouse the basics in the design build on the actual business process which the data warehouse should cover therefore the first step in the model is to describe the business process which the model builds on this could for instance be a sales situation in a retail store to describe the business process one can choose to do this in plain text or use basic business process modeling notation bpmn or other design guides like the unified modeling language uml declare the grain after describing the business process the next step in the design is to declare the grain of the model the grain of the model is the exact description of what the dimensional model should be focusing on this could for instance be an individual line item on a customer slip from a retail store to clarify what the grain means you should pick the central process and describe it with one sentence furthermore the grain sentence is what you are going to build your dimensions and fact table from you might find it necessary to go back to this step to alter the grain due to new information gained on what your model is supposed to be able to deliver identify the dimensions the third step in the design process is to define the dimensions of the model the dimensions must be defined within the grain from the second step of the 4 step process dimensions are the foundation of the fact table and is where the data for the fact table is collected typically dimensions are nouns like date store inventory etc these dimensions are where all the data is stored for example the date dimension could contain data such as year month and weekday identify the facts after defining the dimensions the next step in the process is to make keys for the fact table this step is to identify the numeric facts that will populate each fact table row this step is closely related to the business users of the system since this is where they get access to data stored in the data warehouse therefore most of the fact table rows are numerical additive figures such as quantity or cost per unit etc edit dimension normalization dimensional normalization or snowflaking removes redundant attributes which are known in the normal flatten de normalized dimensions dimensions are strictly joined together in sub dimensions snowflaking has an influence on the data structure that differs from many philosophies of data warehouses 3 single data fact table surrounded by multiple descriptive dimension tables developers often don t normalize dimensions due to several facts 4 normalization makes the data structure more complex performance can be slower due to the many joins between tables the space savings are minimal the use of bitmap indexes can t be done query performance 3nf databases suffer from performance problems when aggregating or retrieving many dimensional values that may require analysis if you are only going to do operational reports then you may be able to get by with 3nf because your operational user will be looking for very fine grain data there are some arguments on why normalization can be useful 3 it can be an advantage when part of hierarchy is common to more than one dimension for example a geographic dimension may be reusable because both the customer and supplier dimensions use it edit benefits of dimensional modeling benefits of the dimensional modeling are following 5 understandability compared to the normalized model the dimensional model is easier to understand and more intuitive in dimensional models information is grouped into coherent business categories or dimensions making it easier to read and interpret simplicity also allows software to navigate databases efficiently in normalized models data is divided into many discrete entities and even a simple business process might result in dozens of tables joined together in a complex way query performance dimensional models are more denormalized and optimized for data querying while normalized models seek to eliminate data redundancies and are optimized for transaction loading and updating the predictable framework of a dimensional model allows the database to make strong assumptions about the data that aid in performance each dimension is an equivalent entry point into the fact table and this symmetrical structure allows effective handling of complex queries query optimization for star join databases is simple predictable and controllable extensibility dimensional models are extensible and easily accommodate unexpected new data existing tables can be changed in place either by simply adding new data rows into the table or executing sql alter table commands no queries or other applications that sit on top of the warehouse need to be reprogrammed to accommodate changes old queries and applications continue to run without yielding different results but in normalized models each modification should be considered carefully because of the complex dependencies between database tables edit literature ralph kimball 1997 a dimensional modeling manifesto dbms and internet systems 10 9 http www kimballgroup com 1997 08 02 a dimensional modeling manifesto manju sid amit sudipta madhu guus 2005 identifying business processes kimball group design tips 69 http www kimballgroup com html designtipspdf designtips2005 dtku69identifyingbusinessprocesses pdf edit references kimball 1997 ralph kimball margy ross warren thornthwaite and joy mundy january 10 2008 the data warehouse lifecycle toolkit expert methods for designing developing and deploying data warehouses second ed wiley isbn 160 978 0 470 14977 5 a b c matteo golfarelli stefano rizzi may 26 2009 data warehouse design modern principles and methodologies mcgraw hill osborne media isbn 160 978 0 07 161039 1 ralph kimball margy ross april 26 2002 the data warehouse toolkit the complete guide to dimensional modeling second ed wiley isbn 160 0 471 20024 7 ralph kimball margy ross warren thornthwaite joy mundy bob becker january 2008 the data warehouse lifecycle toolkit second ed wiley isbn 160 978 0 470 14977 5 v t e data warehouse 160 creating the data warehouse concepts database dimension dimensional modeling fact olap star schema aggregate variants anchor modeling column oriented dbms data vault modeling holap molap rolap operational data store elements data dictionary metadata data mart sixth normal form surrogate key fact fact table early arriving fact measure dimension dimension table degenerate slowly changing filling extract transform load etl extract transform load 160 using the data warehouse concepts business intelligence dashboard data mining decision support system dss olap cube languages data mining extensions dmx multidimensional expressions mdx xml for analysis xmla tools business intelligence tools reporting software spreadsheet 160 related people bill inmon ralph kimball products comparison of olap servers data warehousing products and their producers 