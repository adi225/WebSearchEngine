this article needs additional citations for verification please help improve this article by adding citations to reliable sources unsourced material may be challenged and removed march 2012 in electronics including hardware communication and software scalability is the ability of a system network or process to handle a growing amount of work in a capable manner or its ability to be enlarged to accommodate that growth 1 for example it can refer to the capability of a system to increase total throughput under an increased load when resources typically hardware are added an analogous meaning is implied when the word is used in a economic context where scalability of a company implies that the underlying business model offers the potential for economic growth within the company scalability as a property of systems is generally difficult to define 2 and in any particular case it is necessary to define the specific requirements for scalability on those dimensions that are deemed important it is a highly significant issue in electronics systems databases routers and networking a system whose performance improves after adding hardware proportionally to the capacity added is said to be a scalable system an algorithm design networking protocol program or other system is said to scale if it is suitably efficient and practical when applied to large situations e g a large input data set a large number of outputs or users or a large number of participating nodes in the case of a distributed system if the design or system fails when a quantity increases it does not scale in practice if there are a large number of things n that affect scaling then n must grow less than n 2 an example is a search engine that must scale not only for the number of users but for the number of objects it indexes scalability refers to the ability of a site to increase in size as demand warrants 3 the concept of scalability is desirable in technology as well as business settings the base concept is consistent the ability for a business or technology to accept increased volume without impacting the contribution margin revenue variable costs for example a given piece of equipment may have capacity from 1 1000 users and beyond 1000 users additional equipment is needed or performance will decline variable costs will increase and reduce contribution margin contents 1 measures 2 examples 3 scale horizontally vs vertically 3 1 scale horizontally scale out 3 2 scale vertically scale up 3 3 tradeoffs 4 database scalability 5 design for scalability 6 weak versus strong scaling 7 see also 8 references 9 external links edit measures scalability can be measured in various dimensions such as administrative scalability the ability for an increasing number of organizations or users to easily share a single distributed system functional scalability the ability to enhance the system by adding new functionality at minimal effort geographic scalability the ability to maintain performance usefulness or usability regardless of expansion from concentration in a local area to a more distributed geographic pattern load scalability the ability for a distributed system to easily expand and contract its resource pool to accommodate heavier or lighter loads or number of inputs alternatively the ease with which a system or component can be modified added or removed to accommodate changing load edit examples a routing protocol is considered scalable with respect to network size if the size of the necessary routing table on each node grows as o log n where n is the number of nodes in the network a scalable online transaction processing system or database management system is one that can be upgraded to process more transactions by adding new processors devices and storage and which can be upgraded easily and transparently without shutting it down some early peer to peer p2p implementations of gnutella had scaling issues each node query flooded its requests to all peers the demand on each peer would increase in proportion to the total number of peers quickly overrunning the peers limited capacity other p2p systems like bittorrent scale well because the demand on each peer is independent of the total number of peers there is no centralized bottleneck so the system may expand indefinitely without the addition of supporting resources other than the peers themselves the distributed nature of the domain name system allows it to work efficiently even when all hosts on the worldwide internet are served so it is said to scale well edit scale horizontally vs vertically methods of adding more resources for a particular application fall into two broad categories 4 edit scale horizontally scale out to scale horizontally or scale out means to add more nodes to a system such as adding a new computer to a distributed software application an example might be scaling out from one web server system to three as computer prices drop and performance continues to increase low cost commodity systems can be used for high performance computing applications such as seismic analysis and biotechnology workloads that could in the past only be handled by supercomputers hundreds of small computers may be configured in a cluster to obtain aggregate computing power that often exceeds that of single traditional risc processor based scientific computers this model has further been fueled by the availability of high performance interconnects such as myrinet and infiniband technologies it has also led to demand for features such as remote maintenance and batch processing management previously not available for commodity systems the scale out model has created an increased demand for shared data storage with very high i o performance especially where processing of large amounts of data is required such as in seismic analysis this has fueled the development of new storage technologies such as object storage devices scale out solutions for database servers generally seek to move toward a shared nothing architecture going down the path blazed by google of sharding edit scale vertically scale up to scale vertically or scale up means to add resources to a single node in a system typically involving the addition of cpus or memory to a single computer such vertical scaling of existing systems also enables them to use virtualization technology more effectively as it provides more resources for the hosted set of operating system and application modules to share taking advantage of such resources can also be called scaling up such as expanding the number of apache daemon processes currently running edit tradeoffs there are tradeoffs between the two models larger numbers of computers means increased management complexity as well as a more complex programming model and issues such as throughput and latency between nodes also some applications do not lend themselves to a distributed computing model in the past the price difference between the two models has favored scale up computing for those applications that fit its paradigm but recent advances in virtualization technology have blurred that advantage since deploying a new virtual system over a hypervisor where possible is almost always less expensive than actually buying and installing a real one dubious discuss configuring an existing idle system has always been less expensive than buying installing and configuring a new one regardless of the model edit database scalability a number of different approaches enable databases to grow to very large size while supporting an ever increasing rate of transactions per second not to be discounted of course is the rapid pace of hardware advances in both the speed and capacity of mass storage devices as well as similar advances in cpu and networking speed beyond that a variety of architectures are employed in the implementation of very large scale databases one technique supported by most of the major database management system dbms products is the partitioning of large tables based on ranges of values in a key field in this manner the database can be scaled out across a cluster of separate database servers also with the advent of 64 bit microprocessors multi core cpus and large smp multiprocessors dbms vendors have been at the forefront of supporting multi threaded implementations that substantially scale up transaction processing capacity network attached storage nas and storage area networks sans coupled with fast local area networks and fibre channel technology enable still larger more loosely coupled configurations of databases and distributed computing power the widely supported x open xa standard employs a global transaction monitor to coordinate distributed transactions among semi autonomous xa compliant database resources oracle rac uses a different model to achieve scalability based on a shared everything architecture that relies upon high speed connections between servers while dbms vendors debate the relative merits of their favored designs some companies and researchers question the inherent limitations of relational database management systems gigaspaces for example contends that an entirely different model of distributed data access and transaction processing space based architecture is required to achieve the highest performance and scalability on the other hand base one makes the case for extreme scalability without departing from mainstream relational database technology 5 for specialized applications nosql architectures such as google s bigtable can further enhance scalability google s massively distributed spanner technology positioned as a successor to bigtable supports general purpose database transactions and provides a more conventional sql based query language 6 in any case whether or not adhering to traditional relational concepts there appears to be no limit in sight to database scalability citation needed edit design for scalability it is often advised to focus system design on hardware scalability rather than on capacity it is typically cheaper to add a new node to a system in order to achieve improved performance than to partake in performance tuning to improve the capacity that each node can handle but this approach can have diminishing returns as discussed in performance engineering for example suppose 70 of a program can be sped up if parallelized and run on multiple cpus instead of one if is the fraction of a calculation that is sequential and is the fraction that can be parallelized the maximum speedup that can be achieved by using p processors is given according to amdahl s law substituting the value for this example using 4 processors we get if we double the compute power to 8 processors we get doubling the processing power has only improved the speedup by roughly one fifth if the whole problem was parallelizable we would of course expect the speed up to double also therefore throwing in more hardware is not necessarily the optimal approach edit weak versus strong scaling in the context of high performance computing there are two common notions of scalability the first is strong scaling which is defined as how the solution time varies with the number of processors for a fixed total problem size 7 the second is weak scaling which is defined as how the solution time varies with the number of processors for a fixed problem size per processor edit see also asymptotic complexity computational complexity theory gustafson s law list of system quality attributes load balancing computing lock computer science nosql parallel computing scalable video coding svc similitude model edit references andr b bondi characteristics of scalability and their impact on performance proceedings of the 2nd international workshop on software and performance ottawa ontario canada 2000 isbn 1 58113 195 x pages 195 203 see for instance mark d hill what is scalability in acm sigarch computer architecture news december 1990 volume 18 issue 4 pages 18 21 issn 0163 5964 and leticia duboc david s rosenblum tony wicks doctoral symposium presentations a framework for modelling and analysis of software systems scalability in proceeding of the 28th international conference on software engineering icse 06 may 2006 isbn 1 59593 375 1 pages 949 952 laudon amp traver 2008 michael m j e moreira d shiloach r w wisniewski march 26 2007 scale up x scale out a case study using nutch lucene parallel and distributed processing symposium 2007 ipdps 2007 ieee international http ieeexplore ieee org xpl freeabs all jsp arnumber 4228359 retrieved 2008 01 10 base one database scalability dispelling myths about the limits of database centric architecture 2007 retrieved on may 23 2007 google spanner google s globally distributed database 2012 retrieved on september 30 2012 the weak scaling of dl poly 3 edit external links look up scalability in wiktionary the free dictionary architecture of a highly scalable nio based server an article about writing scalable server in java java net links to diverse learning resources page curated by the memcached project scalable definition by the linux information project linfo scale in distributed systems b clifford neumann in readings in distributed computing systems ieee computer society press 1994 