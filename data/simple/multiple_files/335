it has been suggested that this article or section be merged into latent semantic analysis discuss proposed since july 2012 latent semantic indexing lsi is an indexing and retrieval method that uses a mathematical technique called singular value decomposition svd to identify patterns in the relationships between the terms and concepts contained in an unstructured collection of text lsi is based on the principle that words that are used in the same contexts tend to have similar meanings a key feature of lsi is its ability to extract the conceptual content of a body of text by establishing associations between those terms that occur in similar contexts 1 lsi is also an application of correspondence analysis a multivariate statistical technique developed by jean paul benz cri 2 in the early 1970s to a contingency table built from word counts in documents called latent semantic indexing because of its ability to correlate semantically related terms that are latent in a collection of text it was first applied to text at bell laboratories in the late 1980s the method also called latent semantic analysis lsa uncovers the underlying latent semantic structure in the usage of words in a body of text and how it can be used to extract the meaning of the text in response to user queries commonly referred to as concept searches queries or concept searches against a set of documents that have undergone lsi will return results that are conceptually similar in meaning to the search criteria even if the results don t share a specific word or words with the search criteria contents 1 benefits of lsi 2 lsi timeline 3 mathematics of lsi 3 1 term document matrix 3 2 rank reduced singular value decomposition 4 querying and augmenting lsi vector spaces 5 additional uses of lsi 6 challenges to lsi 7 see also 8 references 9 external links 10 further reading edit benefits of lsi lsi overcomes two of the most problematic constraints of boolean keyword queries multiple words that have similar meanings synonymy and words that have more than one meaning polysemy synonymy is often the cause of mismatches in the vocabulary used by the authors of documents and the users of information retrieval systems 3 4 as a result boolean or keyword queries often return irrelevant results and miss information that is relevant lsi is also used to perform automated document categorization in fact several experiments have demonstrated that there are a number of correlations between the way lsi and humans process and categorize text 5 document categorization is the assignment of documents to one or more predefined categories based on their similarity to the conceptual content of the categories 6 lsi uses example documents to establish the conceptual basis for each category during categorization processing the concepts contained in the documents being categorized are compared to the concepts contained in the example items and a category or categories is assigned to the documents based on the similarities between the concepts they contain and the concepts that are contained in the example documents dynamic clustering based on the conceptual content of documents can also be accomplished using lsi clustering is a way to group documents based on their conceptual similarity to each other without using example documents to establish the conceptual basis for each cluster this is very useful when dealing with an unknown collection of unstructured text because it uses a strictly mathematical approach lsi is inherently independent of language this enables lsi to elicit the semantic content of information written in any language without requiring the use of auxiliary structures such as dictionaries and thesauri lsi can also perform cross linguistic concept searching and example based categorization for example queries can be made in one language such as english and conceptually similar results will be returned even if they are composed of an entirely different language or of multiple languages lsi is not restricted to working only with words it can also process arbitrary character strings any object that can be expressed as text can be represented in an lsi vector space 7 for example tests with medline abstracts have shown that lsi is able to effectively classify genes based on conceptual modeling of the biological information contained in the titles and abstracts of the medline citations 8 lsi automatically adapts to new and changing terminology and has been shown to be very tolerant of noise i e misspelled words typographical errors unreadable characters etc 9 this is especially important for applications using text derived from optical character recognition ocr and speech to text conversion lsi also deals effectively with sparse ambiguous and contradictory data text does not need to be in sentence form for lsi to be effective it can work with lists free form notes email web based content etc as long as a collection of text contains multiple terms lsi can be used to identify patterns in the relationships between the important terms and concepts contained in the text lsi has proven to be a useful solution to a number of conceptual matching problems 10 11 the technique has been shown to capture key relationship information including causal goal oriented and taxonomic information 12 edit lsi timeline mid 1960s factor analysis technique first described and tested h borko and m bernick 1988 seminal paper on lsi technique published deerwester et al 1989 original patent granted deerwester et al 1992 first use of lsi to assign articles to reviewers 13 dumais and nielsen 1994 patent granted for the cross lingual application of lsi landauer et al 1995 first use of lsi for grading essays foltz et al landauer et al 1999 first implementation of lsi technology for intelligence community for analyzing unstructured text saic 2002 lsi based product offering to intelligence based government agencies saic 2005 first vertical specific application publishing edb ebsco content analyst company edit mathematics of lsi lsi uses common linear algebra techniques to learn the conceptual correlations in a collection of text in general the process involves constructing a weighted term document matrix performing a singular value decomposition on the matrix and using the matrix to identify the concepts contained in the text edit term document matrix lsi begins by constructing a term document matrix to identify the occurrences of the unique terms within a collection of documents in a term document matrix each term is represented by a row and each document is represented by a column with each matrix cell initially representing the number of times the associated term appears in the indicated document this matrix is usually very large and very sparse once a term document matrix is constructed local and global weighting functions can be applied to it to condition the data the weighting functions transform each cell of to be the product of a local term weight which describes the relative frequency of a term in a document and a global weight which describes the relative frequency of the term within the entire collection of documents some common local weighting functions 14 are defined in the following table binary if the term exists in the document or else termfrequency the number of occurrences of term in document log augnorm some common global weighting functions are defined in the following table binary normal gfidf where is the total number of times term occurs in the whole collection and is the number of documents in which term occurs idf entropy where empirical studies with lsi report that the log entropy weighting functions work well in practice with many data sets 15 in other words each entry of is computed as edit rank reduced singular value decomposition a rank reduced singular value decomposition is performed on the matrix to determine patterns in the relationships between the terms and concepts contained in the text the svd forms the foundation for lsi 16 it computes the term and document vector spaces by transforming the single term frequency matrix into three other matrices an m by r term concept vector matrix an r by r singular values matrix and a n by r concept document vector matrix which satisfy the following relations in the formula a is the supplied m by n weighted matrix of term frequencies in a collection of text where m is the number of unique terms and n is the number of documents t is a computed m by r matrix of term vectors where r is the rank of a a measure of its unique dimensions min m n s is a computed r by r diagonal matrix of decreasing singular values and d is a computed n by r matrix of document vectors the lsi modification to a standard svd is to reduce the rank or truncate the singular value matrix s to size k 160 r typically on the order of a k in the range of 100 to 300 dimensions effectively reducing the term and document vector matrix sizes to m by k and n by k respectively the svd operation along with this reduction has the effect of preserving the most important semantic information in the text while reducing noise and other undesirable artifacts of the original space of a this reduced set of matrices is often denoted with a modified formula such as a a k t k s k d k t efficient lsi algorithms only compute the first k singular values and term and document vectors as opposed to computing a full svd and then truncating it note that this rank reduction is essentially the same as doing principal component analysis pca on the matrix a except that pca subtracts off the means pca provides cleaner mathematics but loses the sparseness of the a matrix which can make it infeasible for large lexicons edit querying and augmenting lsi vector spaces the computed t k and d k matrices define the term and document vector spaces which with the computed singular values s k embody the conceptual information derived from the document collection the similarity of terms or documents within these spaces is a factor of how close they are to each other in these spaces typically computed as a function of the angle between the corresponding vectors the same steps are used to locate the vectors representing the text of queries and new documents within the document space of an existing lsi index by a simple transformation of the a t s d t equation into the equivalent d a t t s 1 equation a new vector d for a query or for a new document can be created by computing a new column in a and then multiplying the new column by t s 1 the new column in a is computed using the originally derived global term weights and applying the same local weighting function to the terms in the query or in the new document a drawback to computing vectors in this way when adding new searchable documents is that terms that were not known during the svd phase for the original index are ignored these terms will have no impact on the global weights and learned correlations derived from the original collection of text however the computed vectors for the new text are still very relevant for similarity comparisons with all other document vectors the process of augmenting the document vector spaces for an lsi index with new documents in this manner is called folding in although the folding in process does not account for the new semantic content of the new text adding a substantial number of documents in this way will still provide good results for queries as long as the terms and concepts they contain are well represented within the lsi index to which they are being added when the terms and concepts of a new set of documents need to be included in an lsi index either the term document matrix and the svd must be recomputed or an incremental update method such as the one described in 17 be used edit additional uses of lsi it is generally acknowledged that the ability to work with text on a semantic basis is essential to modern information retrieval systems as a result the use of lsi has significantly expanded in recent years as earlier challenges in scalability and performance have been overcome lsi is being used in a variety of information retrieval and text processing applications although its primary application has been for concept searching and automated document categorization 18 below are some other ways in which lsi is being used information discovery 19 ediscovery government intelligence community publishing automated document classification ediscovery government intelligence community publishing 20 text summarization 21 ediscovery publishing relationship discovery 22 government intelligence community social networking automatic generation of link charts of individuals and organizations 23 government intelligence community matching technical papers and grants with reviewers 24 government online customer support 25 customer management determining document authorship 26 education automatic keyword annotation of images 27 understanding software source code 28 software engineering filtering spam 29 system administration information visualization 30 essay scoring 31 education literature based discovery 32 lsi is increasingly being used for electronic document discovery ediscovery to help enterprises prepare for litigation in ediscovery the ability to cluster categorize and search large collections of unstructured text on a conceptual basis is essential concept based searching using lsi has been applied to the ediscovery process by leading providers as early as 2003 33 edit challenges to lsi early challenges to lsi focused on scalability and performance lsi requires relatively high computational performance and memory in comparison to other information retrieval techniques 34 however with the implementation of modern high speed processors and the availability of inexpensive memory these considerations have been largely overcome real world applications involving more than 30 million documents that were fully processed through the matrix and svd computations are not uncommon in some lsi applications another challenge to lsi has been the alleged difficulty in determining the optimal number of dimensions to use for performing the svd as a general rule fewer dimensions allow for broader comparisons of the concepts contained in a collection of text while a higher number of dimensions enable more specific or more relevant comparisons of concepts the actual number of dimensions that can be used is limited by the number of documents in the collection research has demonstrated that around 300 dimensions will usually provide the best results with moderate sized document collections hundreds of thousands of documents and perhaps 400 dimensions for larger document collections millions of documents 35 however recent studies indicate that 50 1000 dimensions are suitable depending on the size and nature of the document collection 36 checking the amount of variance in the data after computing the svd can be used to determine the optimal number of dimensions to retain the variance contained in the data can be viewed by plotting the singular values s in a scree plot some lsi practitioners select the dimensionality associated with the knee of the curve as the cut off point for the number of dimensions to retain others argue that some quantity of the variance must be retained and the amount of variance in the data should dictate the proper dimensionality to retain seventy percent is often mentioned as the amount of variance in the data that should be used to select the optimal dimensionality for recomputing the svd 37 38 39 edit see also latent semantic analysis latent semantic structure indexing principal component analysis correspondence analysis edit references deerwester s et al improving information retrieval with latent semantic indexing proceedings of the 51st annual meeting of the american society for information science 25 1988 pp 36 40 benz cri j p 1973 l analyse des donn es volume ii l analyse des correspondences paris france dunod furnas g et al the vocabulary problem in human system communication communications of the acm 1987 30 11 pp 964 971 zhao l and callan j term necessity prediction proceedings of the 19th acm conference on information and knowledge management cikm 2010 toronto canada 2010 landauer t et al learning human like knowledge by singular value decomposition a progress report m i jordan m j kearns amp s a solla eds advances in neural information processing systems 10 cambridge mit press 1998 pp 45 51 dumais s platt j heckerman d and sahami m inductive learning algorithms and representations for text categorization proceedings of acm cikm 98 1998 zukas anthony price robert j document categorization using latent semantic indexing white paper content analyst company llc homayouni ramin heinrich kevin wei lai berry michael w gene clustering by latent semantic indexing of medline abstracts august 2004 pp 104 115 price r and zukas a application of latent semantic indexing to processing of noisy text intelligence and security informatics lecture notes in computer science volume 3495 springer publishing 2005 pp 602 603 ding c a similarity based probability model for latent semantic indexing proceedings of the 22nd international acm sigir conference on research and development in information retrieval 1999 pp 59 65 bartell b cottrell g and belew r latent semantic indexing is an optimal special case of multidimensional scaling proceedings acm sigir conference on research and development in information retrieval 1992 pp 161 167 graesser a and karnavat a latent semantic analysis captures causal goal oriented and taxonomic structures proceedings of cogsci 2000 pp 184 189 dumais s and nielsen j automating the assignment of submitted manuscripts to reviewers proceedings of the fifteenth annual international conference on research and development in information retrieval 1992 pp 233 244 berry m w and browne m understanding search engines mathematical modeling and text retrieval society for industrial and applied mathematics philadelphia 2005 landauer t et al handbook of latent semantic analysis lawrence erlbaum associates 2007 berry michael w dumais susan t o brien gavin w using linear algebra for intelligent information retrieval december 1994 siam review 37 4 1995 pp 573 595 matthew brand 2006 fast low rank modifications of the thin singular value decomposition pdf linear algebra and its applications 415 20 30 doi 10 1016 j laa 2005 07 021 http www merl com reports docs tr2006 059 pdf dumais s latent semantic analysis arist review of information science and technology vol 38 2004 chapter 4 best practices commentary on the use of search and information retrieval methods in e discovery the sedona conference 2007 pp 189 223 foltz p w and dumais s t personalized information delivery an analysis of information filtering methods communications of the acm 1992 34 12 51 60 gong y and liu x creating generic text summaries proceedings sixth international conference on document analysis and recognition 2001 pp 903 907 bradford r efficient discovery of new information in large text databases proceedings ieee international conference on intelligence and security informatics atlanta georgia lncs vol 3495 springer 2005 pp 374 380 bradford r application of latent semantic indexing in generating graphs of terrorist networks in proceedings ieee international conference on intelligence and security informatics isi 2006 san diego ca usa may 23 24 2006 springer lncs vol 3975 pp 674 675 yarowsky d and florian r taking the load off the conference chairs towards a digital paper routing assistant proceedings of the 1999 joint sigdat conference on empirical methods in nlp and very large corpora 1999 pp 220 230 caron j applying lsa to online customer support a trial study unpublished master s thesis may 2000 soboroff i et al visualizing document authorship using n grams and latent semantic indexing workshop on new paradigms in information visualization and manipulation 1997 pp 43 48 monay f and gatica perez d on image auto annotation with latent space models proceedings of the 11th acm international conference on multimedia berkeley ca 2003 pp 275 278 maletic j and marcus a using latent semantic analysis to identify similarities in source code to support program understanding proceedings of 12th ieee international conference on tools with artificial intelligence vancouver british columbia november 13 15 2000 pp 46 53 gee k using latent semantic indexing to filter spam in proceedings 2003 acm symposium on applied computing melbourne florida pp 460 464 landauer t laham d and derr m from paragraph to graph latent semantic analysis for information visualization proceedings of the national academy of science 101 2004 pp 5214 5219 foltz peter w laham darrell and landauer thomas k automated essay scoring applications to educational technology proceedings of edmedia 1999 gordon m and dumais s using latent semantic indexing for literature based discovery journal of the american society for information science 49 8 1998 pp 674 685 there has to be a better way to search 2008 white paper fios inc karypis g han e fast supervised dimensionality reduction algorithm with applications to document categorization and retrieval proceedings of cikm 00 9th acm conference on information and knowledge management bradford r an empirical study of required dimensionality for large scale latent semantic indexing applications proceedings of the 17th acm conference on information and knowledge management napa valley california usa 2008 pp 153 162 landauer thomas k and dumais susan t latent semantic analysis scholarpedia 3 11 4356 2008 cangelosi r goriely a component retention in principal component analysis with application to cdna microarray data bmc biology direct 2 2 2007 jolliffe l t principal component analysis springer verlag new york 1986 hu x z cai et al lsa first dimension and dimensional weighting 25th annual meeting of the cognitive science society boston ma edit external links michael berry s site gensim contains a python numpy implementation of lsi for matrices larger than the available ram text to matrix generator tmg matlab toolbox that can be used for various tasks in text mining tm specifically i indexing ii retrieval iii dimensionality reduction iv clustering v classification most of tmg is written in matlab and parts in perl it contains implementations of lsi clustered lsi nmf and other methods stanford university andrew ng video on lsi edit further reading berry m w browne m understanding search engines mathematical modeling and text retrieval philadelphia society for industrial and applied mathematics 2005 berry m w editor survey of text mining clustering classification and retrieval new york springer 2004 landauer t et al handbook of latent semantic analysis lawrence erlbaum associates 2007 manning c d schutze h foundations of statistical natural language processing cambridge ma the mit press 1999 