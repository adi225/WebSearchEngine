this article needs attention from an expert in computer science the specific problem is large amounts of technical and unreferenced information see the talk page for details wikiproject computer science or the computer science portal may be able to help recruit an expert august 2012 in computer science and engineering computer architecture is the art that specifies the relations and part of a computer system 1 in the architecture of buildings this art is normally visual but computer architecture is logical defining systems to serve particular purposes in both instances building and computer a complete design has many details and some details are implied by common practice for example at a high level computer architecture is concerned with how the central processing unit cpu acts and how it uses computer memory some fashionable 2011 computer architectures include cluster computing and non uniform memory access computer architects use computers to design new computers emulation software can run programs written in a proposed instruction set while the design is very easy to change at this stage compiler desigers often collaborate with the architects suggesting improvements in the instruction set modern emulators may measure time in clock cycles estimate energy consumption in joules and give realistic estimates of code size in bytes these affect the convenience of the user the life of a battery and the size and expense of the computer s largest physical part its memory that is they help to estimate the value of a computer design contents 1 history 2 subcategories 3 role 3 1 definition 3 2 instruction set architecture 3 3 computer organization 3 4 implementation 4 design goals 4 1 performance 4 2 power consumption 5 see also 6 notes 7 references 8 external links edit history the first documented computer architecture was in the correspondence between charles babbage and ada lovelace describing the analytical engine another early example was john von neumann s 1945 paper first draft of a report on the edvac which described an organization of logical elements ibm used this to develop the ibm 701 the company s first commercial stored program computer delivered in early 1952 the term architecture in computer literature can be traced to the work of lyle r johnson muhammad usman khan and frederick p brooks jr members in 1959 of the machine organization department in ibm s main research center johnson had the opportunity to write a proprietary research communication about the stretch an ibm developed supercomputer for los alamos scientific laboratory to describe the level of detail for discussing the luxuriously embellished computer he noted that his description of formats instruction types hardware parameters and speed enhancements was at the level of system architecture a term that seemed more useful than machine organization subsequently brooks a stretch designer started chapter 2 of a book planning a computer system project stretch ed w buchholz 1962 by writing computer architecture like other architecture is the art of determining the needs of the user of a structure and then designing to meet those needs as effectively as possible within economic and technological constraints brooks went on to help develop the ibm system 360 now called the ibm zseries line of computers in which architecture became a noun defining what the user needs to know later computer users came to use the term in many less explicit ways edit subcategories the art of computer architecture has three main subcategories 2 instruction set architecture or isa the isa defines the codes that a central processor reads and acts upon it is the machine language or assembly language including the instruction set word size memory address modes processor registers and address and data formats microarchitecture also known as computer organization describes the data paths data processing elements and data storage elements and describes how they should implement the isa 3 the size of a computer s cpu cache for instance is an organizational issue that generally has nothing to do with the isa system design includes all of the other hardware components within a computing system these include data paths such as computer buses and switches memory controller s and hierarchies data processing other than the cpu such as direct memory access dma miscellaneous issues such as virtualization multiprocessing and software features some architects at companies such as intel and amd use finer distinctions macroarchitecture architectural layers more abstract than microarchitecture e g isa instruction set architecture isa as above but without assembly isa a smart assembler may convert an abstract assembly language common to a group of machines into slightly different machine language for different implementations programmer visible macroarchitecture higher level language tools such as compilers may define a consistent interface or contract to programmers using them abstracting differences between underlying isa uisa and microarchitectures e g the c c or java standards define different programmer visible macroarchitecture although in practice the c microarchitecture for a particular computer includes uisa microcode instruction set architecture a family of machines with different hardware level microarchitectures may share a common microcode architecture and hence a uisa pin architecture the hardware functions that a microprocessor should provide to a hardware platform e g the x86 pins a20m ferr ignne or flush also messages that the processor should emit so that external caches can be invalidated emptied pin architecture functions are more flexible than isa functions because external hardware can adapt to new encodings or change from a pin to a message the term architecture fits because the functions must be provided for compatible systems even if the detailed method changes edit role edit definition edit instruction set architecture main article instruction set architecture an instruction set architecture isa is the interface between the computer s software and hardware computers do not understand high level languages which have few if any language elements that translate directly into a machine s native opcodes a processor only understands instructions encoded in some numerical fashion usually as binary numbers software tools such as compilers translate high level languages such as c into instructions besides instructions the isa defines items in the computer that are available to a program e g data types registers addressing modes and memory instructions locate operands with register indexes or names and memory addressing modes the isa of a computer is usually described in a small book or pamphlet which describes how the instructions are encoded also it may define short vaguely mnenonic names for the instructions the names can be recognized by a software development tool called an assembler an assembler is a computer program that translates a human readable form of the isa into a computer readable form disassemblers are also widely available usually in debuggers software programs to isolate and correct malfunctions in binary computer programs isas vary in quality and completeness a good isa compromises between programmer convenience more operations can be better cost of the computer to interpret the instructions cheaper is better speed of the computer faster is better and size of the code smaller is better for example a single instruction isa is possible inexpensive and fast e g subtract and jump if zero it was actually used in the ssem but it was not convenient or helpful to make programs small memory organization defines how instructions interact with the memory edit computer organization main article microarchitecture computer organization helps optimize performance based products for example software engineers need to know the processing ability of processors they may need to optimize software in order to gain the most performance at the least expense this can require quite detailed analysis of the computer organization for example in a multimedia decoder the designers might need to arrange for most data to be processed in the fastest data path and the various components are assumed to be in place and task is to investigate the organisational structure to verify the computer parts operates computer organization also helps plan the selection of a processor for a particular project multimedia projects may need very rapid data access while supervisory software may need fast interrupts sometimes certain tasks need additional components as well for example a computer capable of virtualization needs virtual memory hardware so that the memory of different simulated computers can be kept separated computer organization and features also affect power consumption and processor cost edit implementation once an instruction set and microarchitecture are described a practical machine must be designed this design process is called the implementation implementation is usually not considered architectural definition but rather hardware design engineering implementation can be further broken down into several not fully distinct steps logic implementation designs the blocks defined in the microarchitecture at primarily the register transfer level and logic gate level circuit implementation does transistor level designs of basic elements gates multiplexers latches etc as well as of some larger blocks alus caches etc that may be implemented at this level or even partly at the physical level for performance reasons physical implementation draws physical circuits the different circuit components are placed in a chip floorplan or on a board and the wires connecting them are routed design validation tests the computer as a whole to see if it works in all situations and all timings once implementation starts the first design validations are simulations using logic emulators however this is usually too slow to run realistic programs so after making corrections prototypes are constructed using field programmable gate arrays fpgas many hobby projects stop at this stage the final step is to test prototype integrated circuits integrated circuits may require several redesigns to fix problems for cpus the entire implementation process is often called cpu design edit design goals the exact form of a computer system depends on the constraints and goals computer architectures usually trade off standards cost memory capacity latency latency is the amount of time that it takes for information from one node to travel to the source and throughput sometimes other considerations such as features size weight reliability expandability and power consumption are factors the most common scheme carefully chooses the bottleneck that most reduces the computer s speed ideally the cost is allocated proportionally to assure that the data rate is nearly the same for all parts of the computer with the most costly part being the slowest this is how skillful commercial integrators optimize personal computers such as smar cellphones edit performance modern computer performance is often described in mips per mhz millions of instructions per second per millions of cycles per second of clock speed this measures the efficiency of the architecture at any clock speed since a faster clock can make a faster computer this is a useful widely applicable measurement historic computers had mips mhz as low as 0 1 see instructions per second simple modern processors easily reach near 1 superscalar processors may reach three to five by executing several instructions per clock cycle multicore and vector processing cpus can multiply this further by acting on a lot of data per instruction with have several cpus executing in parallel counting machine language instructions would be misleading because they can do varying amounts of work in different isas the instruction in the standard measurements is not a count of the isa s actual machine language instructions but a historical unit of measurement usually based on the speed of the vax computer architecture historically many people measured a computer s speed by the clock rate usually in mhz or ghz this refers to the cycles per second of the main clock of the cpu however this metric is somewhat misleading as a machine with a higher clock rate may not necessarily have higher performance as a result manufacturers have moved away from clock speed as a measure of performance other factors influence speed such as the mix of functional units bus speeds available memory and the type and order of instructions in the programs being run in a typical home computer the simplest most reliable way to speed performance is usually to add random access memory ram more ram increases the likelihood that needed data or a program is in ram so the system is less likely to need to move memory data from the disk the disk is often ten thousand times slower than ram because it has mechanical parts that must move to access its data there are two main types of speed latency and throughput latency is the time between the start of a process and its completion throughput is the amount of work done per unit time interrupt latency is the guaranteed maximum response time of the system to an electronic event e g when the disk drive finishes moving some data performance is affected by a very wide range of design choices for example pipelining a processor usually makes latency worse slower but makes throughput better computers that control machinery usually need low interrupt latencies these computers operate in a real time environment and fail if an operation is not completed in a specified amount of time for example computer controlled anti lock brakes must begin braking within a predictable short time after the brake pedal is sensed the performance of a computer can be measured using other metrics depending upon its application domain a system may be cpu bound as in numerical calculation i o bound as in a webserving application or memory bound as in video editing power consumption has become important in servers and portable devices like laptops benchmarking tries to take all these factors into account by measuring the time a computer takes to run through a series of test programs although benchmarking shows strengths it may not help one to choose a computer often the measured machines split on different measures for example one system might handle scientific applications quickly while another might play popular video games more smoothly furthermore designers may add special features to their products in hardware or software that permit a specific benchmark to execute quickly but don t offer similar advantages to general tasks edit power consumption main article low power electronics power consumption is another measurement that is important in modern computers power efficiency can often be traded for speed or lower cost the typical measurement in this case is mips w millions of instructions per second per watt modern circuits have more power per transistor as the number of transistors per chip grows therefore power efficiency has increased in importance recent processor designs such as the intel core 2 put more emphasis on increasing power efficiency also in the world of embedded computing power efficiency has long been and remains an important goal next to throughput and latency edit see also computer science portal computer hardware cpu design orthogonal instruction set software architecture von neumann architecture influence of the ibm pc on the personal computer market comparison of cpu architectures floating point edit notes john l hennessy and david patterson 2006 computer architecture a quantitative approach fourth edition ed morgan kaufmann isbn 160 978 0 12 370490 0 http www elsevierdirect com product jsp isbn 9780123704900 barton robert s functional design of computers communications of the acm 4 9 405 1961 barton robert s a new approach to the functional design of a digital computer proceedings of the western joint computer conference may 1961 pp 160 393 396 about the design of the burroughs b5000 computer bell c gordon and newell allen 1971 computer structures readings and examples mcgraw hill blaauw g a and brooks f p jr the structure of system 360 part i outline of the logical structure ibm systems journal vol 3 no 2 pp 160 119 135 1964 tanenbaum andrew s 1979 structured computer organization englewood cliffs new jersey prentice hall isbn 160 0 13 148521 0 edit references this article needs additional citations for verification please help improve this article by adding citations to reliable sources unsourced material may be challenged and removed november 2008 princeton wordnetweb http wordnetweb princeton edu perl webwn retrieved 24 august 2012 john l hennessy and david a patterson computer architecture a quantitative approach third edition ed morgan kaufmann publishers laplante phillip a 2001 dictionary of computer science engineering and technology crc press pp 160 94 95 isbn 160 0 8493 2691 5 edit external links this article s use of external links may not follow wikipedia s policies or guidelines please improve this article by removing excessive or inappropriate external links and converting useful links where appropriate into footnote references january 2010 isca proceedings of the international symposium on computer architecture micro ieee acm international symposium on microarchitecture hpca international symposium on high performance computer architecture asplos international conference on architectural support for programming languages and operating systems acm transactions on computer systems acm transactions on architecture and code optimization ieee computer society http www cs wisc edu arch www http www codeproject com useritems system design asp this approach allows beginners to easily break and design complex software systems the von neumann architecture of computer systems a study guide for computer architects v t e digital systems components logic gate combinational logic sequential logic digital circuit integrated circuit ic theory boolean algebra logic synthesis digital signal processing computer architecture applications digital audio digital photography digital video electronic literature 