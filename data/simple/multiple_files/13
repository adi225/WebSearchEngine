aggregates are used in dimensional models of the data warehouse to produce dramatic positive effects on the time it takes to query large sets of data at the simplest form an aggregate is a simple summary table that can be derived by performing a group by sql query a more common use of aggregates is to take a dimension and change the granularity of this dimension when changing the granularity of the dimension the fact table has to be partially summarized to fit the new grain of the new dimension thus creating new dimensional and fact tables fitting this new level of grain aggregates are sometimes referred to as pre calculated summary data since aggregations are usually precomputed partially summarized data that are stored in new aggregated tables when facts are aggregated it is either done by eliminating dimensionality or by associating the facts with a rolled up dimension rolled up dimensions should be shrunken versions of the dimensions associated with the granular base facts this way the aggregated dimension tables should conform to the base dimension tables 1 so the reason why aggregates can make such a dramatic increase in the performance of the data warehouse is the reduction of the number of rows to be accessed when responding to a query 2 kimball who is widely regarded as one of the original architects of data warehousing says 3 the single most dramatic way to affect performance in a large data warehouse is to provide a proper set of aggregate summary records that coexist with the primary base records aggregates can have a very significant effect on performance in some cases speeding queries by a factor of one hundred or even one thousand no other means exist to harvest such spectacular gains having aggregates and atomic data increases the complexity of the dimensional model this complexity should be transparent to the users of the data warehouse thus when a request is made the data warehouse should return data from the table with the correct grain so when requests to the data warehouse are made aggregate navigator functionality should be implemented to help determine the correct table with the correct grain the number of possible aggregations is determined by every possible combination of dimension granularities since it would produce a lot of overhead to build all possible aggregations it is a good idea to choose a subset of tables on which to make aggregations the best way to choose this subset and decide which aggregations to build is to monitor queries and design aggregations to match query patterns 4 edit aggregate navigator having aggregate data in the dimensional model makes the environment more complex to make this extra complexity transparent to the user functionality known as aggregate navigation is used to query the dimensional and fact tables with the correct grain level the aggregate navigation essentially examines the query to see if it can be answered using a smaller aggregate table 5 implementations of aggregate navigators can be found in a range of technologies olap engines materialized views relational olap rolap services bi application servers or query tools it is generally recommended to use either of the first three technologies since the benefits in the latter case is restricted to a single front end bi tool 6 edit problems challenges since dimensional models only gains from aggregates on large data sets at what size of the data sets should one start considering using aggregates similarly is a data warehouses always handling data sets that are too large for direct queries or is it sometimes a good idea to omit the aggregate tables when starting a new data warehouse project thus will omitting aggregates in the first iteration of building a new data warehouse make the structure of the dimensional model simpler edit references ralph kimball margy ross the data warehouse toolkit the complete guide to dimensional modeling second edition wiley computer publishing 2002 isbn 0 471 20024 7 page 356 christopher adamson mastering data warehouse aggregates solutions for star schema performance wiley publishing inc 2006 isbn 978 0 471 77709 0 page 23 aggregate navigation with almost no metadata 1995 08 15 http www rkimball com html articles search articles1996 9608d54 html retrieved 2010 11 22 ralph kimball et al the data warehouse toolkit second edition wiley publishing inc 2008 isbn 978 0 470 14977 5 page 355 ralph kimball et al the data warehouse toolkit second edition wiley publishing inc 2008 isbn 978 0 470 14977 5 page 137 ralph kimball et al the data warehouse toolkit second edition wiley publishing inc 2008 isbn 978 0 470 14977 5 page 354 v t e data warehouse 160 creating the data warehouse concepts database dimension dimensional modeling fact olap star schema aggregate variants anchor modeling column oriented dbms data vault modeling holap molap rolap operational data store elements data dictionary metadata data mart sixth normal form surrogate key fact fact table early arriving fact measure dimension dimension table degenerate slowly changing filling extract transform load etl extract transform load 160 using the data warehouse concepts business intelligence dashboard data mining decision support system dss olap cube languages data mining extensions dmx multidimensional expressions mdx xml for analysis xmla tools business intelligence tools reporting software spreadsheet 160 related people bill inmon ralph kimball products comparison of olap servers data warehousing products and their producers 