this article needs attention from an expert on the subject please add a reason or a talk parameter to this template to explain the issue with the article consider associating this request with a wikiproject july 2011 this article needs additional citations for verification please help improve this article by adding citations to reliable sources unsourced material may be challenged and removed september 2009 a column oriented dbms is a database management system dbms that stores data tables as sections of columns of data rather than as rows of data like most relational dbmss this has advantages for data warehouses customer relationship management crm systems and library card catalogs and other ad hoc inquiry systems 1 where aggregates are computed over large numbers of similar data items it is possible to achieve some of the benefits of column oriented and row oriented organization with any dbmss by denoting one as column oriented we are referring to both the ease of expression of a column oriented structure and the focus on optimizations for column oriented workloads 2 1 this approach is in contrast to row oriented or row store databases and with correlation databases which use a value based storage structure contents 1 description 2 benefits 2 1 compression 3 history 4 implementations 5 see also 6 references 7 external links edit description a relational database management system must show its data as two dimensional tables of columns and rows but store it as one dimensional strings for example a database might have this table empid lastname firstname salary 1 smith joe 40000 2 jones mary 50000 3 johnson cathy 44000 this simple table includes an employee identifier empid name fields lastname and firstname and a salary salary this table exists in the computer s memory ram and storage hard drive although ram and hard drives differ mechanically the computer s operating system abstracts them still the database must coax its two dimensional table into a one dimensional series of bytes for the operating system to write to either the ram hard drive or both a row oriented database serializes all of the values in a row together then the values in the next row and so on 1 smith joe 40000 2 jones mary 50000 3 johnson cathy 44000 a column oriented database serializes all of the values of a column together then the values of the next column and so on 1 2 3 smith jones johnson joe mary cathy 40000 50000 44000 this is a simplification moreover partitioning indexing caching views olap cubes and transactional systems such as write ahead logging or multiversion concurrency control all dramatically affect the physical organization that said online transaction processing oltp focused rdbms systems are more row oriented while online analytical processing olap focused systems are a balance of row oriented and column oriented edit benefits comparisons between row oriented and column oriented data layouts are typically concerned with the efficiency of hard disk access for a given workload as seek time is incredibly long compared to the other delays in computers sometimes reading a megabyte of sequentially stored data takes no more time than one random access 3 further because seek time is improving much more slowly than cpu power see moore s law this focus will likely continue on systems that rely on hard disks for storage following is a set of oversimplified observations which attempt to paint a picture of the trade offs between column and row oriented organizations unless of course the application can be reasonably assured to fit most all data into memory in which case huge optimizations are available from in memory database systems column oriented organizations are more efficient when an aggregate needs to be computed over many rows but only for a notably smaller subset of all columns of data because reading that smaller subset of data can be faster than reading all data column oriented organizations are more efficient when new values of a column are supplied for all rows at once because that column data can be written efficiently and replace old column data without touching any other columns for the rows row oriented organizations are more efficient when many columns of a single row are required at the same time and when row size is relatively small as the entire row can be retrieved with a single disk seek row oriented organizations are more efficient when writing a new row if all of the column data is supplied at the same time as the entire row can be written with a single disk seek in practice row oriented storage layouts are well suited for oltp like workloads which are more heavily loaded with interactive transactions column oriented storage layouts are well suited for olap like workloads e g data warehouses which typically involve a smaller number of highly complex queries over all data possibly terabytes edit compression column data is of uniform type therefore there are some opportunities for storage size optimizations available in column oriented data that are not available in row oriented data for example many popular modern compression schemes such as lzw or run length encoding make use of the similarity of adjacent data to compress while the same techniques may be used on row oriented data a typical implementation will achieve less effective results 4 5 to improve compression sorting rows can also help for example using bitmap indexes sorting can improve compression by an order of magnitude 6 to maximize the compression benefits of the lexicographical order with respect to run length encoding it is best to use low cardinality columns as the first sort keys 7 for example given a table with columns sex age name it would be best to sort first on the value sex cardinality of two then age cardinality of lt 150 then name columnar compression achieves a reduction in disk space at the expense of efficiency of retrieval retrieving all data from a single row is more efficient when that data is located in a single location such as in a row oriented architecture further the greater adjacent compression achieved the more difficult random access may become as data might need to be uncompressed to be read therefore column oriented architectures are sometimes enriched by additional mechanisms aimed at minimizing the need for access to compressed data 8 edit history column stores or transposed files have been implemented from the early days of dbms development taxir was the first application of a column oriented database storage system with focus on information retrieval in biology 9 in 1969 statistics canada implemented the rapid system 10 in 1976 and used it for processing and retrieval of the canadian census of population and housing as well as several other statistical applications rapid was shared with other statistical organizations throughout the world and used widely in the 1980s it continued to be used by statistics canada until the 1990s for many years only the sybase iq product was commercially available in the column oriented dbms class however that has changed rapidly in the last few years when with many open source and commercial implementations edit implementations while even a traditional row oriented rdbms system can achieve some benefits of column oriented layout specialisation of the storage layer and of the query execution engine provide further benefits 11 while nothing precludes providing both row and column optimized capabilities in a single dbms typically products specialize in one of these directions edit see also apache cassandra nosql monetdb edit references a b c store a column oriented dbms stonebraker et al proceedings of the 31st vldb conference trondheim norway 2005 a decomposition storage model copeland george p and khoshafian setrag n sigmod 85 1985 the star schema benchmark and augmented fact table indexing pat amp betty o neil xuedong chen and stephen revilak tpc technology conference 8 24 09 d j abadi s r madden n hachem column stores vs row stores how different are they really in sigmod 08 2008 pp 967 980 n bruno teaching an old elephant new tricks in cidr 09 2009 daniel lemire owen kaser kamel aouiche sorting improves word aligned bitmap indexes data amp knowledge engineering 69 1 pages 3 28 2010 daniel lemire and owen kaser reordering columns for smaller indexes information sciences 181 12 2011 brighthouse an analytic data warehouse for ad hoc queries slezak et al proceedings of the 34th vldb conference auckland new zealand 2008 the theory of the taxir accessioner estabrook brill mathematical biosciences volume 5 issues 3 4 elsevier b v a dbms for large statistical databases turner hammond cotton proceedings of vldb 1979 rio de janeiro brazil column stores vs row stores how different are they really edit external links column oriented database systems overview tour through hybrid column row oriented dbms weaving relations for cache performance column oriented block layout v t e data warehouse 160 creating the data warehouse concepts database dimension dimensional modeling fact olap star schema aggregate variants anchor modeling column oriented dbms data vault modeling holap molap rolap operational data store elements data dictionary metadata data mart sixth normal form surrogate key fact fact table early arriving fact measure dimension dimension table degenerate slowly changing filling extract transform load etl extract transform load 160 using the data warehouse concepts business intelligence dashboard data mining decision support system dss olap cube languages data mining extensions dmx multidimensional expressions mdx xml for analysis xmla tools business intelligence tools reporting software spreadsheet 160 related people bill inmon ralph kimball products comparison of olap servers data warehousing products and their producers 