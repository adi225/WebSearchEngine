this article is about a dimension in a data warehouse for other uses see dimension disambiguation this article needs attention from an expert in databases please add a reason or a talk parameter to this template to explain the issue with the article wikiproject databases may be able to help recruit an expert june 2009 it has been suggested that this article or section be merged with dimension table discuss proposed since december 2012 in a data warehouse dimensions provide structured labeling information to otherwise unordered numeric measures the dimension is a data set composed of individual non overlapping data elements the primary functions of dimensions are threefold to provide filtering grouping and labeling these functions are often described as slice and dice slicing refers to filtering data dicing refers to grouping data a common data warehouse example involves sales as the measure with customer and product as dimensions in each sale a customer buys a product the data can be sliced by removing all customers except for a group under study and then diced by grouping by product a dimensional data element is similar to a categorical variable in statistics typically dimensions in a data warehouse organised internally into one or more hierarchies date is a common dimension with several possible hierarchies days are grouped into months which are grouped into years days are grouped into weeks which are grouped into years days are grouped into months which are grouped into quarters which are grouped into years etc contents 1 types 1 1 conformed dimension 1 2 junk dimension 1 3 degenerate dimension 1 4 role playing dimension 2 use of iso representation terms 3 relationship to other components of a data warehouse 4 common patterns 5 see also 6 references edit types edit conformed dimension a conformed dimension is a set of data attributes that have been physically implemented in multiple database tables using the same structure attributes domain values definitions and concepts in each implementation a conformed dimension cuts across many facts dimensions are conformed when they are either exactly the same including keys or one is a perfect subset of the other most important the row headers produced in the answer sets from two different conformed dimensions must be able to match perfectly conformed dimensions are either identical or strict mathematical subsets of the most granular detailed dimension dimension tables are not conformed if the attributes are labeled differently or contain different values conformed dimensions come in several different flavors at the most basic level conformed dimensions mean exactly the same thing with every possible fact table to which they are joined the date dimension table connected to the sales facts is identical to the date dimension connected to the inventory facts 1 edit junk dimension a junk dimension is a convenient grouping of typically low cardinality flags and indicators by creating an abstract dimension these flags and indicators are removed from the fact table while placing them into a useful dimensional framework 2 a junk dimension is a dimension table consisting of attributes that do not belong in the fact table or in any of the existing dimension tables the nature of these attributes is usually text or various flags e g non generic comments or just simple yes no or true false indicators these kinds of attributes are typically remaining when all the obvious dimensions in the business process have been identified and thus the designer is faced with the challenge of where to put these attributes that do not belong in the other dimensions one solution is to create a new dimension for each of the remaining attributes but due to their nature it could be necessary to create a vast number of new dimensions resulting in a fact table with a very large number of foreign keys the designer could also decide to leave the remaining attributes in the fact table but this could make the row length of the table unnecessarily large if for example the attributes is a long text string the solution to this challenge is to identify all the attributes and then put them into one or several junk dimensions one junk dimension can hold several true false or yes no indicators that have no correlation with each other so it would be convenient to convert the indicators into a more describing attribute an example would be an indicator about whether a package had arrived instead of indicating this as yes or no it would be converted into arrived or pending in the junk dimension the designer can choose to build the dimension table so it ends up holding all the indicators occurring with every other indicator so that all combinations are covered this sets up a fixed size for the table itself which would be 2 x rows where x is the number of indicators this solution is appropriate in situations where the designer would expect to encounter a lot of different combinations and where the possible combinations are limited to an acceptable level in a situation where the number of indicators are large thus creating a very big table or where the designer only expect to encounter a few of the possible combinations it would be more appropriate to build each row in the junk dimension as new combinations are encountered to limit the size of the tables multiple junk dimensions might be appropriate in other situations depending on the correlation between various indicators junk dimensions are also appropriate for placing attributes like non generic comments from the fact table such attributes might consist of data from an optional comment field when a customer places an order and as a result will probably be blank in many cases therefore the junk dimension should contain a single row representing the blanks as a surrogate key that will be used in the fact table for every row returned with a blank comment field 3 edit degenerate dimension a degenerate dimension is a key such as a transaction number invoice number ticket number or bill of lading number that has no attributes and hence does not join to an actual dimension table degenerate dimensions are very common when the grain of a fact table represents a single transaction item or line item because the degenerate dimension represents the unique identifier of the parent degenerate dimensions often play an integral role in the fact table s primary key 4 edit role playing dimension dimensions are often recycled for multiple applications within the same database for instance a date dimension can be used for date of sale as well as date of delivery or date of hire this is often referred to as a role playing dimension edit use of iso representation terms when referencing data from a metadata registry such as iso iec 11179 representation terms such as indicator a boolean true false value code a set of non overlapping enumerated values are typically used as dimensions for example using the national information exchange model niem the data element name would be persongendercode and the enumerated values would be male female and unknown edit relationship to other components of a data warehouse a data warehouse cube is frequently composed of both dimensions and measures these can then be placed into dimension and fact tables in a relational database edit common patterns date and time 5 since many fact tables in a data warehouse are time series of observations one or more date dimensions are often needed one of the reasons to have date dimensions is to place calendar knowledge in the data warehouse instead of hard coded in an application while a simple sql date timestamp is useful for providing accurate information about the time a fact was recorded it can not give information about holidays fiscal periods etc an sql date timestamp can still be useful to store in the fact table as it allows for precise calculations having both the date and time of day in the same dimension may easily result in a huge dimension with millions of rows if a high amount of detail is needed it is usually a good idea to split date and time into two or more separate dimensions a time dimension with a grain of seconds in a day will only have 86400 rows a more or less detailed grain for date time dimensions can be chosen depending on needs as examples date dimensions can be accurate to year quarter month or day and time dimensions can be accurate to hours minutes or seconds as a rule of thumb time of day dimension should only be created if hierarchical groupings are needed or if there are meaningful textual descriptions for periods of time within the day ex evening rush or first shift if the rows in a fact table are coming from several timezones it might be useful to store date and time in both local time and a standard time this can be done by having two dimensions for each date time dimension needed one for local time and one for standard time storing date time in both local and standard time will allow for analysis on when facts are created in a local setting and in a global setting as well the standard time chosen can be a global standard time ex utc it can be the local time of the business headquarter or any other time zone that would make sense to use edit see also categorical variable data warehouse dimension table degenerate dimension slowly changing dimension fact table iso iec 11179 measure data warehouse metadata edit references kimball ralph et al 1998 the data warehouse lifecycle toolkit p17 pub wiley isbn 0 471 25547 5 kimball ralph 1996 the data warehouse toolkit p 160 100 pub wiley isbn 0 471 15337 0 notes ralph kimball margy ross the data warehouse toolkit the complete guide to dimensional modeling second edition wiley computer publishing 2002 isdn 0471 20024 7 pages 82 87 394 ralph kimball margy ross the data warehouse toolkit the complete guide to dimensional modeling second edition wiley computer publishing 2002 isdn 0471 20024 7 pages 202 405 kimball ralph et al 2008 the data warehouse lifecycle toolkit second edition wiley publishing inc indianapolis in pages 263 265 ralph kimball margy ross the data warehouse toolkit the complete guide to dimensional modeling second edition wiley computer publishing 2002 isdn 0471 20024 7 pages 50 398 ralph kimball the data warehouse toolkit second edition wiley publishing inc 2008 isbn 978 0 470 14977 5 pages 253 256 v t e data warehouse 160 creating the data warehouse concepts database dimension dimensional modeling fact olap star schema aggregate variants anchor modeling column oriented dbms data vault modeling holap molap rolap operational data store elements data dictionary metadata data mart sixth normal form surrogate key fact fact table early arriving fact measure dimension dimension table degenerate slowly changing filling extract transform load etl extract transform load 160 using the data warehouse concepts business intelligence dashboard data mining decision support system dss olap cube languages data mining extensions dmx multidimensional expressions mdx xml for analysis xmla tools business intelligence tools reporting software spreadsheet 160 related people bill inmon ralph kimball products comparison of olap servers data warehousing products and their producers 