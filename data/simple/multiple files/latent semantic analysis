semantics language 160 linguistics formal semantics logic amp linguistics lexis lexical semantics statistical semantics structural semantics prototype semantics lexicology semantic analysis latent semantic analysis theory of descriptions force dynamics unsolved problems semantic matching analysis machine abstract semantic graph semantic web semantic wiki semantic file system abstract interpretation formal semantics of 160 programming languages denotational semantics axiomatic semantics operational semantics action semantics categorical semantics concurrency semantics game semantics predicate transformer v t e it has been suggested that latent semantic indexing be merged into this article or section discuss proposed since july 2012 latent semantic analysis lsa is a technique in natural language processing in particular in vectorial semantics of analyzing relationships between a set of documents and the terms they contain by producing a set of concepts related to the documents and terms lsa assumes that words that are close in meaning will occur in similar pieces of text a matrix containing word counts per paragraph rows represent unique words and columns represent each paragraph is constructed from a large piece of text and a mathematical technique called singular value decomposition svd is used to reduce the number of columns while preserving the similarity structure among rows words are then compared by taking the cosine of the angle between the two vectors formed by any two rows values close to 1 represent very similar words while values close to 0 represent very dissimilar words 1 lsa was patented in 1988 us patent 4 839 853 by scott deerwester susan dumais george furnas richard harshman thomas landauer karen lochbaum and lynn streeter in the context of its application to information retrieval it is sometimes called latent semantic indexing lsi 2 contents 1 overview 1 1 occurrence matrix 1 2 rank lowering 1 3 derivation 2 applications 2 1 commercial applications 2 2 applications in human memory 3 implementation 4 limitations 5 see also 6 references 7 external links 7 1 articles on lsa 7 2 talks and demonstrations 7 3 implementations edit overview edit occurrence matrix lsa can use a term document matrix which describes the occurrences of terms in documents it is a sparse matrix whose rows correspond to terms and whose columns correspond to documents a typical example of the weighting of the elements of the matrix is tf idf term frequency inverse document frequency the element of the matrix is proportional to the number of times the terms appear in each document where rare terms are upweighted to reflect their relative importance this matrix is also common to standard semantic models though it is not necessarily explicitly expressed as a matrix since the mathematical properties of matrices are not always used edit rank lowering after the construction of the occurrence matrix lsa finds a low rank approximation 3 to the term document matrix there could be various reasons for these approximations the original term document matrix is presumed too large for the computing resources in this case the approximated low rank matrix is interpreted as an approximation a least and necessary evil the original term document matrix is presumed noisy for example anecdotal instances of terms are to be eliminated from this point of view the approximated matrix is interpreted as a de noisified matrix a better matrix than the original the original term document matrix is presumed overly sparse relative to the true term document matrix that is the original matrix lists only the words actually in each document whereas we might be interested in all words related to each document generally a much larger set due to synonymy the consequence of the rank lowering is that some dimensions are combined and depend on more than one term car truck flower gt 1 3452 car 0 2828 truck flower this mitigates the problem of identifying synonymy as the rank lowering is expected to merge the dimensions associated with terms that have similar meanings it also mitigates the problem with polysemy since components of polysemous words that point in the right direction are added to the components of words that share a similar meaning conversely components that point in other directions tend to either simply cancel out or at worst to be smaller than components in the directions corresponding to the intended sense edit derivation let be a matrix where element describes the occurrence of term in document this can be for example the frequency will look like this now a row in this matrix will be a vector corresponding to a term giving its relation to each document likewise a column in this matrix will be a vector corresponding to a document giving its relation to each term now the dot product between two term vectors gives the correlation between the terms over the documents the matrix product contains all these dot products element which is equal to element contains the dot product likewise the matrix contains the dot products between all the document vectors giving their correlation over the terms now assume that there exists a decomposition of such that and are orthogonal matrices and is a diagonal matrix this is called a singular value decomposition svd the matrix products giving us the term and document correlations then become since and are diagonal we see that must contain the eigenvectors of while must be the eigenvectors of both products have the same non zero eigenvalues given by the non zero entries of or equally by the non zero entries of now the decomposition looks like this the values are called the singular values and and the left and right singular vectors notice the only part of that contributes to is the row let this row vector be called likewise the only part of that contributes to is the column these are not the eigenvectors but depend on all the eigenvectors it turns out that when you select the largest singular values and their corresponding singular vectors from and you get the rank approximation to with the smallest error frobenius norm this approximation has a minimal error but more importantly we can now treat the term and document vectors as a semantic space the vector then has entries mapping it to a lower dimensional space dimensions these new dimensions do not relate to any comprehensible concepts they are a lower dimensional approximation of the higher dimensional space likewise the vector is an approximation in this lower dimensional space we write this approximation as you can now do the following see how related documents and are in the low dimensional space by comparing the vectors and typically by cosine similarity comparing terms and by comparing the vectors and documents and term vector representations can be clustered using traditional clustering algorithms like k means using similarity measures like cosine given a query view this as a mini document and compare it to your documents in the low dimensional space to do the latter you must first translate your query into the low dimensional space it is then intuitive that you must use the same transformation that you use on your documents note here that the inverse of the diagonal matrix may be found by inverting each nonzero value within the matrix this means that if you have a query vector you must do the translation before you compare it with the document vectors in the low dimensional space you can do the same for pseudo term vectors edit applications the new low dimensional space typically can be used to compare the documents in the low dimensional space data clustering document classification find similar documents across languages after analyzing a base set of translated documents cross language retrieval find relations between terms synonymy and polysemy given a query of terms translate it into the low dimensional space and find matching documents information retrieval find the best similarity between small groups of terms in a semantic way i e in a context of a knowledge corpus as for example in multi choice questions mcq answering model 4 synonymy and polysemy are fundamental problems in natural language processing synonymy is the phenomenon where different words describe the same idea thus a query in a search engine may fail to retrieve a relevant document that does not contain the words which appeared in the query for example a search for doctors may not return a document containing the word physicians even though the words have the same meaning polysemy is the phenomenon where the same word has multiple meanings so a search may retrieve irrelevant documents containing the desired words in the wrong meaning for example a botanist and a computer scientist looking for the word tree probably desire different sets of documents edit commercial applications lsa has been used to assist in performing prior art searches for patents 5 edit applications in human memory the use of latent semantic analysis has been prevalent in the study of human memory especially in areas of free recall and memory search there is a positive correlation between the semantic similarity of two words as measured by lsa and the probability that the words would be recalled one after another in free recall tasks using study lists of random common nouns they also noted that in these situations the inter response time between the similar words was much quicker than between dissimilar words these findings are referred to as the semantic proximity effect 6 when participants made mistakes in recalling studied items these mistakes tended to be items that were more semantically related to the desired item and found in a previously studied list these prior list intrusions as they have come to be called seem to compete with items on the current list for recall 7 another model termed word association spaces was is also used in memory studies by collecting free association data from a series of experiments and which includes measures of word relatedness for over 72 000 distinct word pairs 8 edit implementation the svd is typically computed using large matrix methods for example lanczos methods but may also be computed incrementally and with greatly reduced resources via a neural network like approach which does not require the large full rank matrix to be held in memory 9 a fast incremental low memory large matrix svd algorithm has recently been developed 10 matlab and python implementations of these fast algorithms are available unlike gorrell and webb s 2005 stochastic approximation brand s algorithm 2003 provides an exact solution edit limitations some of lsa s drawbacks include the resulting dimensions might be difficult to interpret for instance in car truck flower gt 1 3452 car 0 2828 truck flower the 1 3452 car 0 2828 truck component could be interpreted as vehicle however it is very likely that cases close to car bottle flower gt 1 3452 car 0 2828 bottle flower will occur this leads to results which can be justified on the mathematical level but have no interpretable meaning in natural language lsa cannot capture polysemy i e multiple meanings of a word each occurrence of a word is treated as having the same meaning due to the word being represented as a single point in space for example the occurrence of chair in a document containing the chair of the board and in a separate document containing the chair maker are considered the same the behavior results in the vector representation being an average of all the word s different meanings in the corpus which can make it difficult for comparison however the effect is often lessened due to words having a predominant sense throughout a corpus i e not all meanings are equally likely limitations of bag of words model bow where a text is represented as an unordered collection of words the probabilistic model of lsa does not match observed data lsa assumes that words and documents form a joint gaussian model ergodic hypothesis while a poisson distribution has been observed thus a newer alternative is probabilistic latent semantic analysis based on a multinomial model which is reported to give better results than standard lsa 11 edit see also compound term processing explicit semantic analysis latent semantic mapping latent semantic structure indexing principal components analysis probabilistic latent semantic analysis spamdexing topic model latent dirichlet allocation vectorial semantics coh metrix edit references susan t dumais 2005 latent semantic analysis annual review of information science and technology 38 188 doi 10 1002 aris 1440380105 the latent semantic indexing home page http lsa colorado edu markovsky i 2012 low rank approximation algorithms implementation applications springer 2012 isbn 978 1 4471 2226 5 page 160 needed alain lifchitz sandra jhean larose guy denhi re 2009 effect of tuned parameters on an lsa multiple choice questions answering model pdf behavior research methods 41 4 1201 1209 doi 10 3758 brm 41 4 1201 pmid 160 19897829 http hal archives ouvertes fr docs 00 38 41 43 pdf elsa1 brm20 pdf gerry j elman october 2007 automated patent examination support a proposal biotechnology law report 26 5 435 doi 10 1089 blr 2007 9896 marc w howard and michael j kahana 1999 pdf contextual variability and serial position effects in free recall http psycnet apa org journals xlm 25 4 923 pdf franklin m zaromb et al 2006 pdf temporal associations and prior list intrusions in free recall https memory psych upenn edu files pubs zaroetal06 pdf nelson douglas the university of south florida word association rhyme and word fragment norms http w3 usf edu freeassociation intro html retrieved 5 8 2011 genevi ve gorrell and brandyn webb 2005 generalized hebbian algorithm for latent semantic analysis pdf interspeech 2005 http www dcs shef ac uk genevieve gorrell webb pdf matthew brand 2006 fast low rank modifications of the thin singular value decomposition pdf linear algebra and its applications 415 20 30 doi 10 1016 j laa 2005 07 021 http www merl com reports docs tr2006 059 pdf thomas hofmann 1999 probabilistic latent semantic analysis pdf uncertainty in artificial intelligence http www cs brown edu people th papers hofmann uai99 pdf thomas landauer peter w foltz amp darrell laham 1998 introduction to latent semantic analysis pdf discourse processes 25 2 3 259 284 doi 10 1080 01638539809545028 http lsa colorado edu papers dp1 lsaintro pdf scott deerwester susan t dumais george w furnas thomas k landauer richard harshman 1990 indexing by latent semantic analysis pdf journal of the american society for information science 41 6 391 407 doi 10 1002 sici 1097 4571 199009 41 6 lt 391 aid asi1 gt 3 0 co 2 9 http lsi research telcordia com lsi papers jasis90 pdf original article where the model was first exposed michael berry susan t dumais gavin w o brien 1995 using linear algebra for intelligent information retrieval http citeseer ist psu edu berry95using html pdf illustration of the application of lsa to document retrieval latent semantic analysis infovis http iv slis indiana edu sw lsa html fridolin wild november 23 2005 an open source lsa package for r cran http cran at r project org web packages lsa index html retrieved 2006 11 20 thomas landauer susan t dumais a solution to plato s problem the latent semantic analysis theory of acquisition induction and representation of knowledge http www welchco com 02 14 01 60 96 02 2901 htm retrieved 2007 07 02 edit external links edit articles on lsa latent semantic analysis a scholarpedia article on lsa written by tom landauer one of the creators of lsa edit talks and demonstrations lsa overview talk by prof thomas hofmann describing lsa its applications in information retrieval and its connections to probabilistic latent semantic analysis complete lsa sample code in c for windows the demo code includes enumeration of text files filtering stop words stemming making a document term matrix and svd edit implementations due to its cross domain applications in information retrieval natural language processing nlp cognitive science and computational linguistics lsa has been implemented to support many different kinds of applications sense clusters an information retrieval oriented perl implementation of lsa s space package a computational linguistics and cognitive science oriented java implementation of lsa semantic vectors applies random projection lsa and reflective random indexing to lucene term document matrices infomap project an nlp oriented c implementation of lsa superseded by semanticvectors project text to matrix generator a matlab toolbox for generating term document matrices from text collections with support for lsa gensim contains a fast online python implementation of lsa for matrices larger than ram 