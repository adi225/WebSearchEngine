an example of an automaton the study of the mathematical properties of such automata is automata theory in theoretical computer science automata theory is the study of mathematical objects called abstract machines or automata and the computational problems that can be solved using them automata comes from the greek word meaning self acting the figure at right illustrates a finite state machine which belongs to one well known variety of automaton this automaton consists of states represented in the figure by circles and transitions represented by arrows as the automaton sees a symbol of input it makes a transition or jump to another state according to its transition function which takes the current state and the recent symbol as its inputs automata theory is also closely related to formal language theory an automaton is a finite representation of a formal language that may be an infinite set automata are often classified by the class of formal languages they are able to recognize automata play a major role in theory of computation compiler design parsing and formal verification contents 1 automata 1 1 informal description 1 2 formal definition 2 variant definitions of automata 3 automata theory 4 classes of automata 4 1 discrete continuous and hybrid automata 5 applications 6 automata simulators 7 connection to category theory 8 references 9 further reading 10 external links edit automata following is an introductory definition of one type of automaton which attempts to help one grasp the essential concepts involved in automata theory edit informal description an automaton is supposed to run on some given sequence of inputs in discrete time steps at each time step an automaton gets one input that is picked up from a set of symbols or letters which is called an alphabet at any time the symbols so far fed to the automaton as input form a finite sequence of symbols which is called a word an automaton contains a finite set of states at each instance in time of some run the automaton is in one of its states at each time step when the automaton reads a symbol it jumps or transits to a next state that is decided by a function that takes current state and the symbol currently read as parameters this function is called transition function the automaton reads the symbols of the input word one after another and transits from state to state according to the transition function until the word is read completely once the input word has been read the automaton is said to have been stopped and the state at which automaton has stopped is called final state depending on the final state it s said that the automaton either accepts or rejects an input word there is a subset of states of the automaton which is defined as the set of accepting states if the final state is an accepting state then the automaton accepts the word otherwise the word is rejected the set of all the words accepted by an automaton is called the language recognized by the automaton in short an automaton is a mathematical object that takes a word as input and decides either to accept it or reject it since all computational problems are reducible into the accept reject question on words all problem instances can be represented in a finite length of symbols citation needed automata theory plays a crucial role in computational theory edit formal definition automaton an automaton is represented formally by a 5 tuple q q 0 f where q is a finite set of states is a finite set of symbols called the alphabet of the automaton is the transition function that is 160 q 160 160 160 160 q q 0 is the start state that is the state of the automaton before any input has been processed where q 0 q f is a set of states of q i e f q called accept states input word an automaton reads a finite string of symbols a 1 a 2 a n where a i 160 160 which is called an input word the set of all words is denoted by run a sequence of states q 0 q 1 q 2 q n where q i 160 160 q such that q 0 is the start state and q i 160 160 q i 1 a i for 0 160 lt 160 i 160 160 n is a run of the automaton on an input word w a 1 a 2 a n 160 160 in other words at first the automaton is at the start state q 0 and then the automaton reads symbols of the input word in sequence when the automaton reads symbol a i it jumps to state q i 160 160 q i 1 a i q n is said to be the final state of the run accepting word a word w 160 160 is accepted by the automaton if q n 160 160 f recognized language an automaton can recognize a formal language the language l 160 160 recognized by an automaton is the set of all the words that are accepted by the automaton recognizable languages the recognizable languages are the set of languages that are recognized by some automaton for the above definition of automata the recognizable languages are regular languages for different definitions of automata the recognizable languages are different edit variant definitions of automata automata are defined to study useful machines under mathematical formalism so the definition of an automaton is open to variations according to the real world machine which we want to model using the automaton people have studied many variations of automata the most standard variant which is described above is called a deterministic finite automaton the following are some popular variations in the definition of different components of automata input finite input an automaton that accepts only finite sequence of symbols the above introductory definition only encompasses finite words infinite input an automaton that accepts infinite words words such automata are called automata tree word input the input may be a tree of symbols instead of sequence of symbols in this case after reading each symbol the automaton reads all the successor symbols in the input tree it is said that the automaton makes one copy of itself for each successor and each such copy starts running on one of the successor symbol from the state according to the transition relation of the automaton such an automaton is called tree automaton infinite tree input 160 the two extensions above can be combined so the automaton reads a tree structure with in finite branches such an automaton is called infinite tree automaton states finite states an automaton that contains only a finite number of states the above introductory definition describes automata with finite numbers of states infinite states an automaton that may not have a finite number of states or even a countable number of states for example the quantum finite automaton or topological automaton has uncountable infinity of states stack memory an automaton may also contain some extra memory in the form of a stack in which symbols can be pushed and popped this kind of automaton is called a pushdown automaton transition function deterministic for a given current state and an input symbol if an automaton can only jump to one and only one state then it is a deterministic automaton nondeterministic an automaton that after reading an input symbol may jump into any of a number of states as licensed by its transition relation notice that the term transition function is replaced by transition relation the automaton non deterministically decides to jump into one of the allowed choices such automata are called nondeterministic automata alternation this idea is quite similar to tree automaton but orthogonal the automaton may run its multiple copies on the same next read symbol such automata are called alternating automata acceptance condition must satisfy all runs of such copies to accept the input acceptance condition acceptance of finite words same as described in the informal definition above acceptance of infinite words an omega automaton cannot have final states as infinite words never terminate rather acceptance of the word is decided by looking at the infinite sequence of visited states during the run probabilistic acceptance an automaton need not strictly accept or reject an input it may accept the input with some probability between zero and one for example quantum finite automaton geometric automaton and metric automaton have probabilistic acceptance different combinations of the above variations produce many classes of automaton edit automata theory automata theory is a subject matter that studies properties of various types of automata for example the following questions are studied about a given type of automata which class of formal languages is recognizable by some type of automata recognizable languages are certain automata closed under union intersection or complementation of formal languages closure properties how much is a type of automata expressive in terms of recognizing class of formal languages and their relative expressive power language hierarchy automata theory also studies if there exist any effective algorithm or not to solve problems similar to the following list does an automaton accept any input word emptiness checking is it possible to transform a given non deterministic automaton into deterministic automaton without changing the recognizable language determinization for a given formal language what is the smallest automaton that recognizes it minimization edit classes of automata the following is an incomplete list of types of automata automaton recognizable language nondeterministic deterministic finite state machine fsm regular languages deterministic pushdown automaton dpda deterministic context free languages pushdown automaton pda context free languages linear bounded automaton lba context sensitive languages turing machine recursively enumerable languages deterministic b chi automaton limit languages nondeterministic b chi automaton regular languages rabin automaton streett automaton parity automaton muller automaton regular languages edit discrete continuous and hybrid automata normally automata theory describes the states of abstract machines but there are analog automata or continuous automata or hybrid discrete continuous automata which use analog data continuous time or both edit applications each model in automata theory plays important roles in several applied areas finite automata are used in text processing compilers and hardware design context free grammar cfgs are used in programming languages and artificial intelligence originally cfgs were used in the study of the human languages cellular automata are used in the field of biology the most common example being john conway s game of life some other examples which could be explained using automata theory in biology include mollusk and pine cones growth and pigmentation patterns going further a theory suggesting that the whole universe is computed by some sort of a discrete automaton is advocated by some scientists the idea originated in the work of konrad zuse and was popularized in america by edward fredkin edit automata simulators automata simulators are pedagogical tools used to teach learn and research automata theory an automata simulator takes as input the description of an automaton and then simulates its working for an arbitrary input string the description of the automaton can be entered in several ways an automaton can be defined in a symbolic language or its specification may be entered in a predesigned form or its transition diagram may be drawn by clicking and dragging the mouse well known automata simulators include turing s world jflap vas tags and simstudio 1 edit connection to category theory one can define several distinct categories of automata 2 following the automata classification into different types described in the previous section the mathematical category of deterministic automata sequential machines or sequential automata and turing machines with automata homomorphisms defining the arrows between automata is a cartesian closed category 3 4 it has both categorical limits and colimits an automata homomorphism maps a quintuple of an automaton a i onto the quintuple of another automaton a j 5 automata homomorphisms can also be considered as automata transformations or as semigroup homomorphisms when the state space s of the automaton is defined as a semigroup s g monoids are also considered as a suitable setting for automata in monoidal categories 6 7 8 categories of variable automata one could also define a variable automaton in in the sense of norbert wiener in his book on human use of human beings via the endomorphisms then one can show that such variable automata homomorphisms form a mathematical group in the case of non deterministic or other complex kinds of automata the latter set of endomorphisms may become however a variable automaton groupoid therefore in the most general case categories of variable automata of any kind are categories of groupoids 9 or groupoid categories moreover the category of reversible automata is then a 2 category and also a subcategory of the 2 category of groupoids or the groupoid category edit references chakraborty p saxena p c katti c p 2011 fifty years of automata simulation a review acm inroads 2 4 59 70 http dl acm org citation cfm id 2038893 amp dl acm amp coll dl amp cfid 65021406 amp cftoken 86634854 jir ad mek and vera trnkov 1990 automata and algebras in categories kluwer academic publishers dordrecht and prague s mac lane categories for the working mathematician springer new york 1971 http planetmath org encyclopedia cartesianclosedcategory html cartesian closed category http planetmath org encyclopedia sequentialmachine3 html the category of automata http www csee wvu edu jworthing asl2010 pdf james worthington 2010 determinizing forgetting and automata in monoidal categories asl north american annual meeting march 17 2010 aguiar m and mahajan s 2010 monoidal functors species and hopf algebras meseguer j montanari u 1990 petri nets are monoids information and computation 88 105 155 http en wikipedia org wiki groupoid category of groupoids category of groupoids edit further reading john e hopcroft rajeev motwani jeffrey d ullman 2000 introduction to automata theory languages and computation 2nd edition pearson education isbn 160 0 201 44124 1 michael sipser 1997 introduction to the theory of computation pws publishing isbn 160 0 534 94728 x part one automata and languages chapters 1 2 pp 160 29 122 section 4 1 decidable languages pp 160 152 159 section 5 1 undecidable problems from language theory pp 160 172 183 salomaa arto 1985 computation and automata encyclopedia of mathematics and its applications 25 cambridge university press isbn 160 0 521 30245 5 zbl 160 0565 68046 anderson james a 2006 automata theory with modern applications with contributions by tom head cambridge cambridge university press isbn 160 0 521 61324 8 zbl 160 1127 68049 conway j h 1971 regular algebra and finite machines chapman and hall mathematics series london chapman amp hall zbl 160 0231 94041 sakarovitch jacques 2009 elements of automata theory translated from the french by reuben thomas cambridge university press isbn 160 978 0 521 84425 3 zbl 160 1188 68177 james p schmeiser david t barnard 1995 producing a top down parse order with bottom up parsing elsevier north holland d souza d and shankar p 2012 modern applications of automata theory world scientific publishing singapore edit external links visual automata simulator a tool for simulating visualizing and transforming finite state automata and turing machines by jean bovet jflap dk brics automaton libfa v t e automata theory formal languages and formal grammars chomsky hierarchy grammars languages minimal automaton type 0 unrestricted recursively enumerable turing machine recursive recursive decider type 1 context sensitive context sensitive linear bounded indexed indexed nested stack linear context free rewriting systems etc mildly context sensitive thread automaton tree adjoining etc tree adjoining embedded pushdown type 2 context free context free nondeterministic pushdown deterministic context free deterministic context free deterministic pushdown visibly pushdown visibly pushdown visibly pushdown type 3 regular regular finite star free counter free with aperiodic finite monoid each category of languages is a proper subset of the category directly above it any automaton and any grammar in each category has an equivalent automaton or grammar in the category directly above it 