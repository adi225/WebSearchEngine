the data modeling process the figure illustrates the way data models are developed and used today a conceptual data model is developed based on the data requirements for the application that is being developed perhaps in the context of an activity model the data model will normally consist of entity types attributes relationships integrity rules and the definitions of those objects this is then used as the start point for interface or database design 1 data modeling in software engineering is the process of creating a data model for an information system by applying formal data modeling techniques contents 1 overview 2 data modeling topics 2 1 data models 2 2 conceptual logical and physical schemas 2 3 data modeling process 2 4 modeling methodologies 2 5 entity relationship diagrams 2 6 generic data modeling 2 7 semantic data modeling 3 see also 4 references 5 further reading 6 external links edit overview data modeling is a process used to define and analyze data requirements needed to support the business processes within the scope of corresponding information systems in organizations therefore the process of data modeling involves professional data modelers working closely with business stakeholders as well as potential users of the information system there are three different types of data models produced while progressing from requirements to the actual database to be used for the information system 2 the data requirements are initially recorded as a conceptual data model which is essentially a set of technology independent specifications about the data and is used to discuss initial requirements with the business stakeholders the conceptual model is then translated into a logical data model which documents structures of the data that can be implemented in databases implementation of one conceptual data model may require multiple logical data models the last step in data modeling is transforming the logical data model to a physical data model that organizes the data into tables and accounts for access performance and storage details data modeling defines not just data elements but also their structures and the relationships between them 3 data modeling techniques and methodologies are used to model data in a standard consistent predictable manner in order to manage it as a resource the use of data modeling standards is strongly recommended for all projects requiring a standard means of defining and analyzing data within an organization e g using data modeling to assist business analysts programmers testers manual writers it package selectors engineers managers related organizations and clients to understand and use an agreed semi formal model the concepts of the organization and how they relate to one another to manage data as a resource for the integration of information systems for designing databases data warehouses aka data repositories data modeling may be performed during various types of projects and in multiple phases of projects data models are progressive there is no such thing as the final data model for a business or application instead a data model should be considered a living document that will change in response to a changing business the data models should ideally be stored in a repository so that they can be retrieved expanded and edited over time whitten 2004 determined two types of data modeling 4 strategic data modeling this is part of the creation of an information systems strategy which defines an overall vision and architecture for information systems is defined information engineering is a methodology that embraces this approach data modeling during systems analysis in systems analysis logical data models are created as part of the development of new databases data modeling is also used as a technique for detailing business requirements for specific databases it is sometimes called database modeling because a data model is eventually implemented in a database 4 edit data modeling topics edit data models main article data model how data models deliver benefit 1 data models provide a structure for data used within information systems by providing specific definition and format if a data model is used consistently across systems then compatibility of data can be achieved if the same data structures are used to store and access data then different applications can share data seamlessly the results of this are indicated in the diagram however systems and interfaces often cost more than they should to build operate and maintain they may also constrain the business rather than support it this may occur when the quality of the data models implemented in systems and interfaces is poor 1 business rules specific to how things are done in a particular place are often fixed in the structure of a data model this means that small changes in the way business is conducted lead to large changes in computer systems and interfaces so business rules need to be implemented in a flexible way that does not result in complicated dependencies rather the data model should be flexible enough so that changes in the business can be implemented within the data model in a relatively quick and efficient way entity types are often not identified or are identified incorrectly this can lead to replication of data data structure and functionality together with the attendant costs of that duplication in development and maintenance therefore data definitions should be made as explicit and easy to understand as possible to minimize misinterpretation and duplication data models for different systems are arbitrarily different the result of this is that complex interfaces are required between systems that share data these interfaces can account for between 25 70 of the cost of current systems required interfaces should be considered inherently while designing a data model as a data model on its own would not be usable without interfaces within different systems data cannot be shared electronically with customers and suppliers because the structure and meaning of data has not been standardised to obtain optimal value from an implemented data model it is very important to define standards that will ensure that data models will both meet business needs and be consistent 1 edit conceptual logical and physical schemas the ansi sparc three level architecture this shows that a data model can be an external model or view a conceptual model or a physical model this is not the only way to look at data models but it is a useful way particularly when comparing models 1 in 1975 ansi described three kinds of data model instance 5 conceptual schema describes the semantics of a domain the scope of the model for example it may be a model of the interest area of an organization or of an industry this consists of entity classes representing kinds of things of significance in the domain and relationships assertions about associations between pairs of entity classes a conceptual schema specifies the kinds of facts or propositions that can be expressed using the model in that sense it defines the allowed expressions in an artificial language with a scope that is limited by the scope of the model simply described a conceptual schema is the first step in organizing the data requirements logical schema describes the structure of some domain of information this consists of descriptions of for example tables columns object oriented classes and xml tags the logical schema and conceptual schema are sometimes implemented as one and the same 2 physical schema describes the physical means used to store data this is concerned with partitions cpus tablespaces and the like according to ansi this approach allows the three perspectives to be relatively independent of each other storage technology can change without affecting either the logical or the conceptual schema the table column structure can change without necessarily affecting the conceptual schema in each case of course the structures must remain consistent across all schemas of the same data model edit data modeling process data modeling in the context of business process integration 6 in the context of business process integration see figure data modeling complements business process modeling and ultimately results in database generation 6 the process of designing a database involves producing the previously described three types of schemas conceptual logical and physical the database design documented in these schemas are converted through a data definition language which can then be used to generate a database a fully attributed data model contains detailed attributes descriptions for every entity within it the term database design can describe many different parts of the design of an overall database system principally and most correctly it can be thought of as the logical design of the base data structures used to store the data in the relational model these are the tables and views in an object database the entities and relationships map directly to object classes and named relationships however the term database design could also be used to apply to the overall process of designing not just the base data structures but also the forms and queries used as part of the overall database application within the database management system or dbms in the process system interfaces account for 25 to 70 of the development and support costs of current systems the primary reason for this cost is that these systems do not share a common data model if data models are developed on a system by system basis then not only is the same analysis repeated in overlapping areas but further analysis must be performed to create the interfaces between them most systems within an organization contain the same basic data redeveloped for a specific purpose therefore an efficiently designed basic data model can minimize rework with minimal modifications for the purposes of different systems within the organization 1 edit modeling methodologies data models represent information areas of interest while there are many ways to create data models according to len silverston 1997 7 only two modeling methodologies stand out top down and bottom up bottom up models are often the result of a reengineering effort they usually start with existing data structures forms fields on application screens or reports these models are usually physical application specific and incomplete from an enterprise perspective they may not promote data sharing especially if they are built without reference to other parts of the organization 7 top down logical data models on the other hand are created in an abstract way by getting information from people who know the subject area a system may not implement all the entities in a logical model but the model serves as a reference point or template 7 sometimes models are created in a mixture of the two methods by considering the data needs and structure of an application and by consistently referencing a subject area model unfortunately in many environments the distinction between a logical data model and a physical data model is blurred in addition some case tools don t make a distinction between logical and physical data models 7 edit entity relationship diagrams main article entity relationship model example of a idef1x entity relationship diagrams used to model idef1x itself the name of the view is mm the domain hierarchy and constraints are also given the constraints are expressed as sentences in the formal theory of the meta model 8 there are several notations for data modeling the actual model is frequently called entity relationship model because it depicts data in terms of the entities and relationships described in the data 4 an entity relationship model erm is an abstract conceptual representation of structured data entity relationship modeling is a relational schema database modeling method used in software engineering to produce a type of conceptual data model or semantic data model of a system often a relational database and its requirements in a top down fashion these models are being used in the first stage of information system design during the requirements analysis to describe information needs or the type of information that is to be stored in a database the data modeling technique can be used to describe any ontology i e an overview and classifications of used terms and their relationships for a certain universe of discourse i e area of interest several techniques have been developed for the design of data models while these methodologies guide data modelers in their work two different people using the same methodology will often come up with very different results most notable are bachman diagrams barker s notation chen s notation data vault modeling extended backus naur form idef1x object relational mapping object role modeling relational model relational model tasmania edit generic data modeling main article generic data model example of a generic data model 9 generic data models are generalizations of conventional data models they define standardized general relation types together with the kinds of things that may be related by such a relation type the definition of generic data model is similar to the definition of a natural language for example a generic data model may define relation types such as a classification relation being a binary relation between an individual thing and a kind of thing a class and a part whole relation being a binary relation between two things one with the role of part the other with the role of whole regardless the kind of things that are related given an extensible list of classes this allows the classification of any individual thing and to specify part whole relations for any individual object by standardization of an extensible list of relation types a generic data model enables the expression of an unlimited number of kinds of facts and will approach the capabilities of natural languages conventional data models on the other hand have a fixed and limited domain scope because the instantiation usage of such a model only allows expressions of kinds of facts that are predefined in the model edit semantic data modeling main article semantic data model the logical data structure of a dbms whether hierarchical network or relational cannot totally satisfy the requirements for a conceptual definition of data because it is limited in scope and biased toward the implementation strategy employed by the dbms semantic data models 8 therefore the need to define data from a conceptual view has led to the development of semantic data modeling techniques that is techniques to define the meaning of data within the context of its interrelationships with other data as illustrated in the figure the real world in terms of resources ideas events etc are symbolically defined within physical data stores a semantic data model is an abstraction which defines how the stored symbols relate to the real world thus the model must be a true representation of the real world 8 a semantic data model can be used to serve many purposes such as 8 planning of data resources building of shareable databases evaluation of vendor software integration of existing databases the overall goal of semantic data models is to capture more meaning of data by integrating relational concepts with more powerful abstraction concepts known from the artificial intelligence field the idea is to provide high level modeling primitives as integral part of a data model in order to facilitate the representation of real world situations 10 edit see also architectural pattern computer science comparison of data modeling tools data computing data dictionary document modeling information management informative modeling three schema approach zachman framework metadata modeling edit references 160 this article incorporates 160 public domain material from websites or documents of the national institute of standards and technology a b c d e f matthew west and julian fowler 1999 developing high quality data models the european process industries step technical liaison executive epistle a b simison graeme c amp witt graham c 2005 data modeling essentials 3rd edition morgan kauffman publishers isbn 0 12 644551 6 data integration glossary dead link u s department of transportation august 2001 a b c whitten jeffrey l lonnie d bentley kevin c dittman 2004 systems analysis and design methods 6th edition isbn 0 256 19906 x american national standards institute 1975 ansi x3 sparc study group on data base management systems interim report fdt bulletin of acm sigmod 7 2 a b paul r smith amp richard sarfaty 1993 creating a strategic plan for configuration management using computer aided software engineering case tools paper for 1993 national doe contractors and facilities cad cae user s group a b c d len silverston w h inmon kent graziano 2007 the data model resource book wiley 1997 isbn 0 471 15364 8 reviewed by van scott on tdan com accessed 1 nov 2008 a b c d fips publication 184 released of idef1x by the computer systems laboratory of the national institute of standards and technology nist 21 december 1993 amnon shabo 2006 clinical genomics data standards for pharmacogenetics and pharmacogenomics semantic data modeling in metaclasses and their application book series lecture notes in computer science publisher springer berlin heidelberg volume volume 943 1995 edit further reading j h ter bekke 1991 semantic data modeling in relational environments john vincent carlis joseph d maguire 2001 mastering data modeling a user driven approach alan chmura j mark heumann 2005 logical data modeling what it is and how to do it martin e modell 1992 data analysis data modeling and classification m papazoglou stefano spaccapietra zahir tari 2000 advances in object oriented data modeling g lawrence sanders 1995 data modeling graeme c simsion graham c witt 2005 data modeling essentials graeme simsion 2007 data modeling theory and practice chris bradley donna burbank steve hoberman 2009 data modeling for the business a handbook for aligning the business with it using high level data models edit external links wikimedia commons has media related to data modeling agile evolutionary data modeling data modeling articles database modelling in uml data modeling 101 semantic data modeling system development methodologies and modeling notes on by tony drewry request for proposal information management metamodel imm of the object management group data modeling is not just for dbms s part 1 chris bradley data modeling is not just for dbms s part 2 chris bradley v t e data model main role history architecture modeling properties organization structure theory patterns schemas conceptual logical physical types database data structure diagram dsd entity relationship erm and enhanced notation eerm geographic generic semantic related models data flow diagram dfd information model object model object role model orm unified modeling language models uml see also database design business process model core architecture data model enterprise model function model process model xml schema data format description language dfdl v t e software engineering fields computer programming formal methods requirements analysis software deployment software design software maintenance software testing systems analysis concepts data modeling enterprise architecture functional specification modeling language orthogonality programming paradigm software software architecture software development methodology software development process software quality software quality assurance software archaeology structured analysis orientations agile aspect oriented object orientation ontology service orientation sdlc models developmental agile eup executable uml incremental model iterative model rup scrum prototype model spiral model v model waterfall model xp other spice cmmi data model er model function model information model metamodeling object model systems model view model languages idef uml sysml software engineers kent beck grady booch fred brooks barry boehm peter chen ward cunningham ole johan dahl tom demarco martin fowler c a r hoare watts humphrey michael a jackson ivar jacobson james martin stephen j mellor bertrand meyer david parnas winston w royce james rumbaugh niklaus wirth edward yourdon victor basili related fields computer science computer engineering enterprise engineering history management project management quality management software ergonomics systems engineering category commons 